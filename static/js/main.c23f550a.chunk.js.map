{"version":3,"sources":["libs/components.ts","components/alerts/Alert.tsx","components/alerts/Error.tsx","images/loader.svg","components/icons/Loader.tsx","libs/hooks/general.tsx","components/headings/H1.tsx","components/form/Input.tsx","libs/utils.ts","components/buttons/Button.tsx","components/buttons/Primary.tsx","libs/clients/stake.ts","pages/Login.tsx","pages/Logout.tsx","components/headings/H2.tsx","components/headings/H3.tsx","components/headings/H4.tsx","components/links/Internal.tsx","pages/Journal.tsx","containers/App.tsx","libs/hooks/user.ts","index.tsx"],"names":["mergeClassNames","base","overrides","overrideKeys","split","reduce","carry","override","prefix","slice","join","push","filteredBaseclassNames","filter","className","some","overrideKey","startsWith","Alert","title","icon","closeButtonClassName","dismissable","onDismiss","message","role","type","onClick","style","width","height","ErrorAlert","otherProps","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLoader","_ref","svgRef","titleId","props","xmlns","fill","viewBox","ref","id","cx","cy","r","stroke","strokeWidth","opacity","d","ForwardRef","LoaderIcon","useAsyncState","defaultLoading","useState","loading","setLoading","errorData","set","clear","error","has","useErrorAlert","setError","clearError","hasError","loadingText","textProps","Loader","default","H1","children","Input","forwardRef","nanoid","debounceOnChange","undefined","debounceTimeout","value","onChange","inputProps","internalValue","setInternalValue","debouncedUpdate","useMemo","func","delay","timeoutId","previousCall","args","delayedCallback","timeSinceLastCall","Date","now","window","setTimeout","newArgs","debounce","newValue","e","Button","PrimaryButton","apiUrl","uri","login","username","password","otp","a","data","platformType","rememberMeDays","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","ok","json","responseData","firstName","lastName","regionIdentifier","sessionKey","userID","status","Error","user","loadTrades","from","to","limit","offset","desc","direction","toISO","loadMarketData","symbols","marketDataList","formSchema","Joi","object","email","string","required","tlds","LoginPage","history","useHistory","requiresOtp","setRequiresOtp","emailRef","useRef","useForm","criteriaMode","resolver","joiResolver","register","errors","handleSubmit","formState","useEffect","current","focus","onSubmit","localStorage","setItem","name","placeholder","Primary","disabled","LogoutPage","logout","removeItem","H2","H3","H4","InternalLink","CELL_WIDTH","SUMMARY_CELL_WIDTH","sortTransactionsAsc","b","tranWhen","sortBuySell","date","sortLogEntries","aEarliestBuyDate","buys","bEarliestBuyDate","fillDataArrayWithBuys","transactions","newData","forEach","transaction","finTranTypeID","symbol","instrument","DateTime","fromISO","dataIndex","Math","floor","diff","as","dayLog","realisedProfitRaw","realisedProfitPercent","unrealisedProfitRaw","unrealisedProfitPercent","combinedProfitRaw","combinedProfitPercent","realisedCost","unrealisedCost","startOf","hasHoldings","hasSells","startingAccountBalance","accountBalance","accountAmount","symbolEntry","sells","holdingUnitCount","buyIndex","findIndex","candidate","orderId","orderID","existingBuy","unitQuantity","fillQty","totalPrice","tranAmount","concat","unitPrice","fillPx","fillDataArrayWithSells","unmatchedTransactions","remainingQuantity","searchIndex","fillQuantity","calculateProfits","symbolPrices","map","dayRealisedCost","dayRealisedGain","dayUnrealisedCost","dayUnrealisedGain","dayHasHoldings","dayHasSells","logEntry","quantitySold","sort","realisedGain","total","sell","buy","buyQuantity","abs","symbolPrice","unrealisedGain","getDisplayProfit","raw","percent","isProfit","toPrecision","getDisplayProfits","realisedRaw","realisedPercent","unrealisedRaw","unrealisedPercent","displayRealisedRaw","displayRealisedPercent","displayUnrealisedRaw","displayUnrealisedPercent","displayCombinedRaw","displayCombinedPercent","JournalPage","cachedData","getItem","startLoadTrades","setStartLoadTrades","endLoadTrades","setEndLoadTrades","startLoadMarketData","setStartLoadMarketData","parse","setData","showUnmatchedAlert","setShowUnmatchedAlert","unmatchedTransactionCount","setUnmatchedTransactionCount","holdingSymbols","values","dayLogSymbol","monthLogs","newMonthLogs","dayDate","startOfMonth","startOfWeek","monthLog","find","equals","weekLogs","weekLog","weekNumber","endOfWeek","endOf","plus","week","weekOfMonth","dayLogs","reverse","summary","startingBalance","realisedBalance","unrealisedBalance","isRealisedProfit","isUnrealisedProfit","displayRealisedProfitRaw","displayRealisedProfitPercent","displayUnrealisedProfitRaw","displayUnrealisedProfitPercent","toFixed","startFetchingTrades","startOfYear","local","lastFetchDate","fetchFrom","fetchTo","fetching","buyTransactions","sellTransactions","fetchMarketData","marketData","lastTrade","Internal","toFormat","weekIndex","symbolEntries","hasSold","index","withRouter","location","useLocation","userJson","useCurrentUser","unauthenticatedRoutes","path","exact","component","authenticatedRoutes","Journal","Logout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAEaA,EAAkB,SAACC,EAAcC,GAC5C,IAAMC,EAAeD,EAClBE,MAAM,KACNC,QAAiB,SAACC,EAAOC,GACxB,IAAMC,EAASD,EAASH,MAAM,KAAKK,MAAM,GAAI,GAAGC,KAAK,KAMrD,MAJe,KAAXF,GACFF,EAAMK,KAAKH,GAGNF,IACN,IACCM,EAAyBX,EAC5BG,MAAM,KACNS,QACC,SAACC,GAAD,OACGX,EAAaY,MAAK,SAACC,GAAD,OAAiBF,EAAUG,WAAWD,SAE5DN,KAAK,KACR,MAAM,GAAN,OAAUE,EAAV,YAAoCV,I,WCuCvBgB,EA9CqB,SAAC,GAQ9B,IAAD,IAPJC,aAOI,MAPI,KAOJ,MANJC,YAMI,MANG,KAMH,MALJN,iBAKI,MALQ,GAKR,MAJJO,4BAII,MAJmB,GAInB,MAHJC,mBAGI,aAFJC,iBAEI,MAFQ,KAER,EADJC,EACI,EADJA,QAEA,OACE,sBACEV,UAAWd,EACT,kDACAc,GAEFW,KAAK,QALP,UAOGH,GAAeC,GACd,wBACET,UAAWd,EACT,iFACAqB,GAEFK,KAAK,SACLP,MAAM,QACNQ,QAAS,kBAAMJ,KAPjB,SASG,cAAC,IAAD,CAAGT,UAAU,cAGjBM,GACC,qBACEN,UAAU,qBACVc,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAFlC,SAIGV,IAGL,gCACGD,GAAS,oBAAIL,UAAU,iBAAd,SAAgCK,IAC1C,4BAAIK,WChCGO,EAd+B,SAAC,GAGxC,IAAD,IAFJjB,iBAEI,MAFQ,GAER,EADDkB,EACC,6BACJ,OACE,cAAC,EAAD,aACElB,UAAWd,EAAgB,0BAA2Bc,GACtDO,qBAAqB,iDACrBD,KAAM,cAAC,IAAD,KACFY,KCjBV,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,SAASoB,EAAUC,EAAMC,GACvB,IAAIvC,EAAQsC,EAAKtC,MACbwC,EAAUF,EAAKE,QACfC,EAAQb,EAAyBU,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAOxB,EAAS,CACtD4B,MAAO,6BACPC,KAAM,OACNhC,OAAQ,GACRD,MAAO,GACPkC,QAAS,YACTC,IAAKN,EACL,kBAAmBC,GAClBC,GAAQzC,EAAqB,gBAAoB,QAAS,CAC3D8C,GAAIN,GACHxC,GAAS,KAAmB,gBAAoB,SAAU,CAC3D+C,GAAI,GACJC,GAAI,GACJC,EAAG,GACHC,OAAQ,eACRC,YAAa,EACb1C,MAAO,CACL2C,QAAS,OAEI,gBAAoB,OAAQ,CAC3CT,KAAM,eACNlC,MAAO,CACL2C,QAAS,KAEXC,EAAG,qHAIP,IAAIC,EAA0B,aAAiBjB,GCzBhCkB,GD0BA,ICtCuC,SAAC,GAGhD,IAAD,IAFJ5D,iBAEI,MAFQ,GAER,EADDkB,EACC,6BACJ,OACE,cAAC,EAAD,aACElB,UAAWd,EAAgB,eAAgBc,IACvCkB,MC+CG2C,EAAgB,SAACf,GAAgC,IAAD,GACxBA,GAAS,IAApCgB,sBADmD,WAE7BC,mBAASD,GAFoB,mBAEpDE,EAFoD,KAE3CC,EAF2C,OAhChC,WAAO,IAAD,EACRF,mBAGf,MAJuB,mBAC1BG,EAD0B,KACfC,EADe,KAM3BC,EAAQ,kBAAMD,EAAI,OAexB,MAAO,CACLE,MAdY,SAACvB,GAA6B,IAAD,EACMA,GAAS,GADf,IACjC9C,iBADiC,MACrB,GADqB,MACjBQ,mBADiB,SAEzC,OAAO0D,EACL,cAAC,EAAD,CACElE,UAAWA,EACXK,MAAO6D,EAAU7D,MACjBK,QAASwD,EAAUxD,QACnBF,YAAaA,EACbC,UAAW2D,IAEX,MAKJD,MACAC,QACAE,IAAK,kBAAoB,OAAdJ,IAeTK,GAJFF,EAJyD,EAIzDA,MACKG,EALoD,EAKzDL,IACOM,EANkD,EAMzDL,MACKM,EAPoD,EAOzDJ,IAcF,MAAO,CACLN,UACAW,YAbkB,SAACC,GACnB,OAAOZ,EACL,sBAAKhE,UAAU,oBAAf,UACE,cAAC6E,EAAD,CAAY7E,UAAU,SACtB,+BAAO4E,EAAUZ,aAGnBY,EAAUE,SAOZb,aACAI,QACAG,WACAC,aACAC,aCjEWK,EAlBqC,SAAC,GAI9C,IAAD,IAHJ/E,iBAGI,MAHQ,GAGR,EAFJgF,EAEI,EAFJA,SACG9D,EACC,wCACJ,OACE,4CACElB,UAAWd,EACT,6CACAc,IAEEkB,GALN,aAOG8D,M,eCAP,IAmDeC,EAnDDC,sBACZ,WAWEhC,GACI,IAAD,IAVDlD,iBAUC,MAVW,GAUX,MATDmD,UASC,MATIgC,cASJ,MARDd,aAQC,aAPDe,wBAOC,WAPkBC,EAOlB,MANDC,uBAMC,MANiB,IAMjB,EALDC,EAKC,EALDA,MACAC,EAIC,EAJDA,SACGC,EAGF,oGACuC1B,wBAC9BsB,IAAVE,EAAsB,GAAKA,GAF1B,mBACIG,EADJ,KACmBC,EADnB,KAKGC,EAAkBC,mBACtB,kBC9BC,SACLC,EACAC,GAEA,IAAIC,EAA2B,KAC3BC,EAAuB,EACvBC,OAAYb,EAEVc,EAAkB,SAAlBA,IACJ,IAAMC,EAAoBC,KAAKC,MAAQL,EAEnCG,EAAoBL,GACtBD,EAAI,WAAJ,cAAQI,IACRF,EAAY,KACZC,EAAe,EACfC,OAAOb,GAEPW,EAAYO,OAAOC,WAAWL,EAAiBJ,EAAQK,IAI3D,OAAS,WACW,OAAdJ,IACFA,EAAYO,OAAOC,WAAWL,EAAiBJ,IAFrB,2BAAjBU,EAAiB,yBAAjBA,EAAiB,gBAK5BP,EAAOO,EACPR,EAAeI,KAAKC,ODIhBI,EAAS,SAACC,GACJvB,GACFA,EAAiBuB,KAElBrB,KACL,CAACF,EAAkBE,IAQrB,OACE,mCACEpC,IAAKA,EACLC,GAAIA,EACJnD,UAAWd,EAAgB,8EAAD,OAEtBmF,EAAQ,iBAAmB,mBAE7BrE,GAEFuF,MAAOH,EAAmBM,EAAgBH,EAC1CC,SAAUJ,EAhBW,SAACwB,GACxBjB,EAAiBiB,EAAEtF,OAAOiE,OAC1BK,EAAgBgB,EAAEtF,OAAOiE,QAcyBC,GAC5CC,OEpCGoB,EAtBA3B,sBAMb,WAA0DhC,GAAS,IAAhE8B,EAA+D,EAA/DA,SAA+D,IAArDhF,iBAAqD,MAAzC,GAAyC,MAArCY,YAAqC,MAA9B,SAA8B,EAAjBkC,EAAiB,+CAClE,OACE,gDACEI,IAAKA,EACLtC,KAAMA,EACNZ,UAAWd,EACT,qFACAc,IAEE8C,GAPN,aASGkC,QCAQ8B,EAhBO5B,sBAGpB,WAA+BhC,GAAS,IAAD,IAApClD,iBAAoC,MAAxB,GAAwB,EAAjB8C,EAAiB,6BACvC,OACE,cAAC,EAAD,aACEI,IAAKA,EACLlD,UAAWd,EACT,wFACAc,IAEE8C,OCVV,SAASiE,EAAOC,GACd,MAAM,GAAN,OAHc,4CAGd,YAAqBA,GAGhB,SAAeC,EAAtB,sC,4CAAO,WAAqBC,EAAkBC,EAAkBC,GAAzD,qBAAAC,EAAA,6DACCC,EAAY,CAChBJ,WACAC,WACAI,aAAc,aACdC,eAAgB,IAGdJ,IACFE,EAAKF,IAAMA,GATR,SAYkBK,MAAMV,EAAO,6BAA8B,CAChEW,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,oBAElBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUb,KAtBlB,YAYCc,EAZD,QAyBQC,GAzBR,iCA0BwBD,EAASE,OA1BjC,cA0BGC,EA1BH,yBA2BI,CACLC,UAAWD,EAAaC,UACxBC,SAAUF,EAAaE,SACvBC,iBAAkBH,EAAaG,iBAC/BC,WAAYJ,EAAaI,WACzBC,OAAQL,EAAaK,OACrB1B,SAAUqB,EAAarB,WAjCtB,WAoCqB,MAApBkB,EAASS,OApCV,0CAqCM,MArCN,yBAuC0BT,EAASE,OAvCnC,cAuCKC,EAvCL,OAwCK,IAAIO,MAAJ,2BAA8BP,EAAa7H,UAxChD,6C,kEA6CA,WAAsBqI,GAAtB,SAAA1B,EAAA,sEACCI,MAAMV,EAAO,YAAD,OAAagC,EAAKJ,aAAe,CACjDjB,OAAQ,SACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,oBAElBC,SAAU,SACVC,eAAgB,gBAVb,4C,sBAcA,SAAegB,EAAtB,4C,4CAAO,WACLD,EACAE,EACAC,EACAC,EACAC,EACAC,GANK,mBAAAhC,EAAA,sEAQkBI,MAAMV,EAAO,sCAAuC,CACzEW,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,mBAChB,sBAAuBiB,EAAKJ,YAE9BZ,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAU,CACnBmB,UAAWD,EAAO,OAAS,OAC3BJ,KAAMA,EAAKM,QACXL,GAAIA,EAAGK,QACPJ,QACAC,OAAQA,GAAU,SAxBjB,YAQChB,EARD,QA4BQC,GA5BR,iCA6BwBD,EAASE,OA7BjC,cA6BGC,EA7BH,yBA8BIA,GA9BJ,yBAgCwBH,EAASE,OAhCjC,cAgCGC,EAhCH,OAiCG,IAAIO,MAAJ,uCAA0CP,EAAa7H,UAjC1D,6C,sBAqCA,SAAe8I,EAAtB,oC,4CAAO,WAA8BT,EAAYU,GAA1C,mBAAApC,EAAA,sEACkBI,MACrBV,EAAO,qBAAD,OAAsB0C,EAAQ7J,KAAK,OACzC,CACE8H,OAAQ,MACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,mBAChB,sBAAuBiB,EAAKJ,YAE9BZ,SAAU,SACVC,eAAgB,gBAbf,YACCI,EADD,QAiBQC,GAjBR,iCAkBwBD,EAASE,OAlBjC,cAkBGC,EAlBH,yBAmBIA,EAAamB,gBAnBjB,yBAqBwBtB,EAASE,OArBjC,cAqBGC,EArBH,OAsBG,IAAIO,MAAJ,sCAAyCP,EAAa7H,UAtBzD,6C,sBCvFP,IAAMiJ,EAAaC,IAAIC,OAAO,CAC5BC,MAAOF,IAAIG,SAASC,WAAWF,MAAM,CAAEG,MAAM,IAC7C9C,SAAUyC,IAAIG,SAASC,WACvB5C,IAAKwC,IAAIG,WAgHIG,EA7Ga,WAC1B,IAAMC,EAAUC,cADgB,EAEMrG,oBAAS,GAFf,mBAEzBsG,EAFyB,KAEZC,EAFY,KAG1BC,EAAWC,iBAAgC,MAHjB,EAIsBC,YAAoB,CACxEC,aAAc,MACdC,SAAUC,sBAAYjB,KAFhBkB,EAJwB,EAIxBA,SAAUC,EAJc,EAIdA,OAAmBC,GAJL,EAINC,UAJM,EAIKD,cAJL,EAe5BlH,IANFG,EAT8B,EAS9BA,QACAW,EAV8B,EAU9BA,YACAV,EAX8B,EAW9BA,WACAI,EAZ8B,EAY9BA,MACAG,EAb8B,EAa9BA,SACAC,EAd8B,EAc9BA,WAGFwG,qBAAU,WACJV,GAAYA,EAASW,SACvBX,EAASW,QAAQC,UAElB,IAEH,IAAMC,EAAQ,uCAAG,WAAO9D,GAAP,eAAAD,EAAA,0DACXgD,GAAgB/C,EAAKF,IADV,uBAEb5C,EAAS,CACPnE,MAAO,eACPK,QAAS,4CAJE,iCASf+D,IACAR,GAAW,GAVI,kBAaMgD,EACjBK,EAAKwC,MACLxC,EAAKH,SACLG,EAAKF,IAAME,EAAKF,SAAM/B,GAhBX,OAmBA,QANP0D,EAbO,SAoBXuB,GAAe,GACfrG,GAAW,KAEXsC,OAAO8E,aAAaC,QAAQ,OAAQpD,KAAKC,UAAUY,IACnDoB,EAAQtK,KAAK,MAxBF,kDA2Bb2E,EAAS,CACPnE,MAAO,eACPK,QAAS,KAAEA,UAEbuD,GAAW,GA/BE,0DAAH,sDAmCd,OACE,sBAAKjE,UAAU,qDAAf,UACE,cAAC,EAAD,oCACCqE,EAAM,CAAErE,UAAW,SACpB,uBACEA,UAAU,QACVoL,SAAUL,EAAaK,GACvBtK,MAAO,CAAEC,MAAO,KAHlB,UAKE,cAAC,EAAD,CACEmC,IAAK,SAACA,GACJ2H,EAAS3H,GACTqH,EAASW,QAAUhI,GAErBqI,KAAK,QACL3K,KAAK,OACLyD,QAASyG,EAAOhB,MAChB0B,YAAY,UAEd,cAAC,EAAD,CACEtI,IAAK2H,EACL7K,UAAU,OACVY,KAAK,WACL2K,KAAK,WACLlH,QAASyG,EAAO3D,SAChBqE,YAAY,aAEbnB,GACC,cAAC,EAAD,CACEnH,IAAK2H,EACL7K,UAAU,OACVuL,KAAK,MACLlH,QAASyG,EAAO3D,SAChBqE,YAAY,sBAGhB,cAACC,EAAD,CACEzL,UAAU,iCACVY,KAAK,SACL8K,SAAU1H,EAHZ,SAKGW,EAAY,CACXX,QAAS,gBACTc,QAAS,oBCvGN6G,EAd+B,SAAC,GAAc,IAAZ5C,EAAW,EAAXA,KACzCoB,EAAUC,cAUhB,OARAa,qBAAU,YF2CL,SAAP,2BE1CIW,CAAO7C,GACPxC,OAAO8E,aAAaQ,WAAW,QAC/BtF,OAAO8E,aAAaQ,WAAW,eAC/BtF,OAAO8E,aAAaQ,WAAW,wBAC/B1B,EAAQtK,KAAK,YACZ,IAEI,M,gBCEMiM,EAlBqC,SAAC,GAI9C,IAAD,IAHJ9L,iBAGI,MAHQ,GAGR,EAFJgF,EAEI,EAFJA,SACG9D,EACC,wCACJ,OACE,4CACElB,UAAWd,EACT,6CACAc,IAEEkB,GALN,aAOG8D,MCKQ+G,EAlBqC,SAAC,GAI9C,IAAD,IAHJ/L,iBAGI,MAHQ,GAGR,EAFJgF,EAEI,EAFJA,SACG9D,EACC,wCACJ,OACE,4CACElB,UAAWd,EACT,6CACAc,IAEEkB,GALN,aAOG8D,MCKQgH,EAlBqC,SAAC,GAI9C,IAAD,IAHJhM,iBAGI,MAHQ,GAGR,EAFJgF,EAEI,EAFJA,SACG9D,EACC,wCACJ,OACE,4CACElB,UAAWd,EACT,6CACAc,IAEEkB,GALN,aAOG8D,MCGQiH,EAfsC,SAAC,GAG/C,IAAD,IAFJjM,iBAEI,MAFQ,GAER,EADD8C,EACC,6BACJ,OACE,cAAC,IAAD,aACE9C,UAAWd,EACT,yCACAc,IAEE8C,KCAJoJ,GAAa,IACbC,GAAqB,IAoF3B,SAASC,GAAoB/E,EAAgBgF,GAC3C,OAAIhF,EAAEiF,SAAWD,EAAEC,UACT,EACCjF,EAAEiF,SAAWD,EAAEC,SACjB,EAEA,EAIX,SAASC,GAAYlF,EAAiBgF,GACpC,OAAIhF,EAAEmF,KAAOH,EAAEG,MACL,EACCnF,EAAEmF,KAAOH,EAAEG,KACb,EAEA,EAIX,SAASC,GAAepF,EAAagF,GACnC,IAAMK,EAAmBrF,EAAEsF,KAAK,GAAGH,KAC7BI,EAAmBP,EAAEM,KAAK,GAAGH,KAEnC,OAAIE,EAAmBE,GACb,EACCF,EAAmBE,EACrB,EAEA,EAIX,SAASC,GACP5D,EACA3B,EACAwF,GAEA,IAAIC,EAAUzF,EAAK3H,QAgFnB,OA9EAmN,EAAaE,SAAQ,SAACC,GACpB,GAAkC,SAA9BA,EAAYC,cAA0B,CACxC,IAAMC,EAASF,EAAYG,WAAWD,OAChCX,EAAOa,WAASC,QAAQL,EAAYX,UACpCiB,EAAYC,KAAKC,MAAMjB,EAAKkB,KAAKzE,GAAM0E,GAAG,SAE5CC,EAASb,EAAQQ,GAEhBK,IACHA,EAAS,CACPnE,QAAS,GACToE,kBAAmB,EACnBC,sBAAuB,EACvBC,oBAAqB,EACrBC,wBAAyB,EACzBC,kBAAmB,EACnBC,sBAAuB,EACvBC,aAAc,EACdC,eAAgB,EAChB5B,KAAMA,EAAK6B,QAAQ,OAAO9E,QAC1B+E,aAAa,EACbC,UAAU,EACVC,uBACEvB,EAAYwB,eAAiBxB,EAAYyB,gBAI/C,IAAIC,EAAcf,EAAOnE,QAAQ0D,GAE5BwB,IACHA,EAAc,CACZvB,WAAYH,EAAYG,WACxBT,KAAM,GACNiC,MAAO,GACPC,iBAAkB,EAClBhB,kBAAmB,EACnBC,sBAAuB,EACvBC,oBAAqB,EACrBC,wBAAyB,EACzBC,kBAAmB,EACnBC,sBAAuB,EACvBC,aAAc,EACdC,eAAgB,IAIpB,IAAIU,EAAWH,EAAYhC,KAAKoC,WAC9B,SAACC,GAAD,OAAeA,EAAUC,UAAYhC,EAAYiC,WAGnD,GAAIJ,GAAY,EAAG,CAEjB,IAAMK,EAAcR,EAAYhC,KAAKmC,GACrCH,EAAYhC,KAAKmC,GAAjB,2BACKK,GADL,IAEEC,aAAcD,EAAYC,aAAenC,EAAYoC,QACrDC,WAAYH,EAAYG,WAAarC,EAAYsC,kBAGnDZ,EAAYhC,KAAOgC,EAAYhC,KAAK6C,OAAO,CACzCP,QAAShC,EAAYiC,QACrBO,UAAWxC,EAAYyC,OACvBN,aAAcnC,EAAYoC,QAC1BC,WAAYrC,EAAYsC,WACxB/C,KAAMS,EAAYX,WAItBqC,EAAYE,kBAAoB5B,EAAYoC,QAE5CzB,EAAOnE,QAAP,2BACKmE,EAAOnE,SADZ,kBAEG0D,EAFH,eAEiBwB,KAEjB5B,EAAQQ,GAAR,eAA0BK,OAIvBb,EAGT,SAAS4C,GAAuBrI,EAAewF,GAC7C,IAAIC,EAAUzF,EAAK3H,QACfiQ,EAAuC,GAkD3C,OAhDA9C,EAAaE,SAAQ,SAACC,GACpB,GAAkC,SAA9BA,EAAYC,cAA0B,CAKxC,IAJA,IAAMC,EAASF,EAAYG,WAAWD,OAClC0C,EAAoB5C,EAAYoC,QAChCS,EAAc,EAEXD,EAAoB,GAAKC,EAAc/C,EAAQtL,QAAQ,CAC5D,IAAMmM,EAASb,EAAQ+C,GACjBnB,EAAcf,EAASA,EAAOnE,QAAQ0D,QAAU9H,EAEtD,GAAIsJ,GAAeA,EAAYE,kBAAoB,EAAG,CACpD,IAAMkB,EACJpB,EAAYE,kBAAoBgB,EAC5BA,EACAA,EAAoBlB,EAAYE,iBACtC9B,EAAQ+C,GAAR,2BACK/C,EAAQ+C,IADb,IAEErG,QAAQ,2BACHsD,EAAQ+C,GAAcrG,SADpB,kBAEJ0D,EAFI,2BAGAwB,GAHA,IAIHE,iBAAkBF,EAAYE,iBAAmBkB,EACjDnB,MAAOD,EAAYC,MAAMY,OAAO,CAC9BP,QAAShC,EAAYiC,QACrBO,UAAWxC,EAAYyC,OACvBN,aAAcW,EACdT,WAAYrC,EAAYsC,WACxB/C,KAAMS,EAAYX,iBAM1BuD,GAAqBE,EAGvBD,IAGED,EAAoB,GACtBD,EAAsB/P,KAAtB,2BACKoN,GADL,IAEEoC,QAASQ,SAMV,CAAC9C,EAAS6C,GAGnB,SAASI,GACP1I,EACA2I,GAEA,OAAO3I,EAAK4I,KAAI,SAACtC,GACf,IAAKA,EACH,OAAO,KAGT,IAAIuC,EAAkB,EAClBC,EAAkB,EAClBC,EAAoB,EACpBC,EAAoB,EACpBC,GAAiB,EACjBC,GAAc,EAEZ/G,EAAUrI,OAAOgB,KAAKwL,EAAOnE,SAASlK,QAC1C,SAACC,EAAO2N,GACN,IAAMsD,EAAW7C,EAAOnE,QAAQ0D,GAC5BuD,EAAe,EAEnBD,EAAS7B,MAAM+B,KAAKpE,IACpBkE,EAAS9D,KAAKgE,KAAKpE,IAEnB,IAAMqE,EAAeH,EAAS7B,MAAMrP,QAAO,SAACsR,EAAOC,GAEjD,OADAJ,GAAgBI,EAAK1B,aACbyB,EAASC,EAAK1B,aAAe0B,EAAKrB,YACzC,GAVc,EAWsBgB,EAAS9D,KAAKpN,QACnD,SAACC,EAAOuR,GACN,IAAIC,EAAcD,EAAI3B,aAkBtB,OAhBIsB,EAAe,IACbM,EAAcN,GAChBlR,EAAM,GAAKA,EAAM,GAAKkR,EAAeK,EAAItB,UACzCuB,GAAeN,EACfA,EAAe,IAEflR,EAAM,GAAKA,EAAM,GAAKwR,EAAcD,EAAItB,UACxCiB,GAAgBM,EAChBA,EAAc,IAIdA,EAAc,IAChBxR,EAAM,GAAKA,EAAM,GAAKwR,EAAcD,EAAItB,WAGnCjQ,IAET,CAAC,EAAG,IAjCW,mBAWV2O,EAXU,KAWIC,EAXJ,KAmCXP,EAAoB+C,EAAezC,EACnCL,EACkB,IAAtBD,EACI,EACCL,KAAKyD,IAAIpD,GAAqBM,EAC/B,KACCN,EAAoB,GAAK,EAAI,GAE9BqD,EAAcjB,EAAa9C,IAAW,EACtCgE,EAAiBV,EAAS5B,iBAAmBqC,EAC7CnD,EACJmD,GAAeT,EAAS5B,iBACpBsC,EAAiB/C,EACjB,EAEAJ,EACoB,IAAxBD,EACI,EACCP,KAAKyD,IAAIlD,GAAuBK,EACjC,KACCL,EAAsB,GAAK,EAAI,GAEhCE,EACJ2C,EAAeO,GAAkBhD,EAAeC,GAC5CF,EACkB,IAAtBD,EACI,EACCT,KAAKyD,IAAIpD,EAAoBE,IAC3BI,EAAeC,GAClB,KACCH,EAAoB,GAAK,EAAI,GAqBpC,OAnBAkC,GAAmBhC,EACnBiC,GAAmBQ,EACnBP,GAAqBjC,EACrBkC,GAAqBa,EACrBZ,EAAiBA,GAAkBE,EAAS5B,iBAAmB,EAC/D2B,EAAcA,GAAeC,EAAS7B,MAAMnN,OAAS,EAErDjC,EAAM2N,GAAN,2BACKsD,GADL,IAEE5C,oBACAC,wBACAC,sBACAC,0BACAC,oBACAC,wBACAC,eACAC,mBAGK5O,IAET,IAGIqO,EAAoBuC,EAAkBD,EACtCrC,EACkB,IAAtBD,EACI,EACCL,KAAKyD,IAAIpD,GAAqBsC,EAC/B,KACCtC,EAAoB,GAAK,EAAI,GAC9BE,EAAsBuC,EAAoBD,EAC1CrC,EACoB,IAAxBD,EACI,EACCP,KAAKyD,IAAIlD,GAAuBsC,EACjC,KACCtC,EAAsB,GAAK,EAAI,GAChCE,EACJmC,EACAE,GACCH,EAAkBE,GACfnC,EACkB,IAAtBD,EACI,EACCT,KAAKyD,IAAIpD,EAAoBE,IAC3BoC,EAAkBE,GACrB,KACCpC,EAAoB,GAAK,EAAI,GAEpC,OAAO,2BACFL,GADL,IAEEnE,UACAoE,oBACAC,wBACAC,sBACAC,0BACAC,oBACAC,wBACAC,aAAcgC,EACd/B,eAAgBiC,EAChB/B,YAAaiC,EACbhC,SAAUiC,OAKhB,SAASY,GAAiBC,EAAaC,GACrC,IAAMC,EAAWF,GAAO,EAQxB,MAAO,CAPe,UAAME,EAAW,IAAM,IAAvB,YAA8B/D,KAAKyD,IAAII,GAAKG,YAChE,IAEwB,UAAMD,EAAW,IAAM,KAAvB,OAA6B/D,KAAKyD,IAC1DK,GACAE,YAAY,GAFY,MAO5B,SAASC,GAAkBnK,GAOvB,IAAD,EACsC8J,GACrC9J,EAAKuG,kBACLvG,EAAKwG,uBAHN,mBACM4D,EADN,KACmBC,EADnB,OAK0CP,GACzC9J,EAAKyG,oBACLzG,EAAK0G,yBAPN,mBAKM4D,EALN,KAKqBC,EALrB,OASsCT,GACrC9J,EAAK2G,kBACL3G,EAAK4G,uBAXN,mBAcD,MAAO,CACL4D,mBAAoBJ,EACpBK,uBAAwBJ,EACxBK,qBAAsBJ,EACtBK,yBAA0BJ,EAC1BK,mBAnBD,KAoBCC,uBApBD,MA2BH,IAg5BeC,GAh5BiC,SAAC,GAAc,IAAZrJ,EAAW,EAAXA,KAC3CsJ,EAAa9L,OAAO8E,aAAaiH,QAAQ,eADa,EAEXzO,IAAzCG,EAFoD,EAEpDA,QAASC,EAF2C,EAE3CA,WAAYI,EAF+B,EAE/BA,MAAOG,EAFwB,EAExBA,SAFwB,EAGdT,oBAAS,GAHK,mBAGrDwO,EAHqD,KAGpCC,EAHoC,OAIlBzO,oBAAS,GAJS,mBAIrD0O,EAJqD,KAItCC,EAJsC,OAKN3O,oBAAS,GALH,mBAKrD4O,EALqD,KAKhCC,EALgC,OAMpC7O,mBACtBsO,EAAanK,KAAK2K,MAAMR,GAAc,IAPoB,mBAMrD/K,EANqD,KAM/CwL,EAN+C,OASR/O,oBAAS,GATD,mBASrDgP,EATqD,KASjCC,EATiC,OAUMjP,mBAAS,GAVf,mBAUrDkP,EAVqD,KAU1BC,EAV0B,KAWtDC,EAAiBtN,mBAAQ,WAC7B,IAAM4D,EAAUnC,EAAK/H,QACnB,SAACC,EAAOoO,GAQN,OAPIA,GACFxM,OAAOgS,OAAOxF,EAAOnE,SAASuD,SAAQ,SAACqG,GACjCA,EAAaxE,iBAAmB,IAClCrP,EAAM6T,EAAajG,WAAWD,SAAU,MAIvC3N,IAET,IAGF,OAAO4B,OAAOgB,KAAKqH,KAClB,CAACnC,IACEgM,EAAYzN,mBAAQ,WACxB,IAAM0N,EAAejM,EAAK/H,QAAkB,SAACC,EAAOoO,GAClD,IAAKA,EACH,OAAOpO,EAGT,IAAMgU,EAAUnG,WAASC,QAAQM,EAAOpB,MAClCiH,EAAeD,EAAQnF,QAAQ,SAC/BqF,EAAcF,EAAQnF,QAAQ,QAChCsF,EAAWnU,EAAMoU,MAAK,SAAC5E,GAAD,OACxBA,EAAUxC,KAAKqH,OAAOJ,MAGnBE,IACHA,EAAW,CACTnH,KAAMiH,EACN5F,kBAAmB,EACnBC,sBAAuB,EACvBC,oBAAqB,EACrBC,wBAAyB,EACzBC,kBAAmB,EACnBC,sBAAuB,EACvBC,aAAc,EACdC,eAAgB,EAChB0F,SAAU,GACVxF,aAAa,EACbC,UAAU,GAGZ/O,EAAMK,KAAK8T,IAGb,IAAII,EAAUJ,EAASG,SAASF,MAAK,SAAC5E,GAAD,OACnCA,EAAUxC,KAAKqH,OAAOH,MAGxB,IAAKK,EAAS,CAIZ,IAHA,IAAIC,EAAa,EACbC,EAAYR,EAAaS,MAAM,QAE5BR,EAAcO,GACnBD,IACAC,EAAYA,EAAUE,KAAK,CAAEC,KAAM,IAGrCL,EAAU,CACRvH,KAAMkH,EACNW,YAAaL,EACbnG,kBAAmB,EACnBC,sBAAuB,EACvBC,oBAAqB,EACrBC,wBAAyB,EACzBC,kBAAmB,EACnBC,sBAAuB,EACvBC,aAAc,EACdC,eAAgB,EAChBkG,QAAS,GACThG,aAAa,EACbC,UAAU,GAGZoF,EAASG,SAASjU,KAAKkU,GA6DzB,OA1DAJ,EAASrF,YAAcqF,EAASrF,aAAeV,EAAOU,YACtDqF,EAASpF,SAAWoF,EAASpF,UAAYX,EAAOW,SAChDoF,EAASxF,cAAgBP,EAAOO,aAChCwF,EAASvF,gBAAkBR,EAAOQ,eAClCuF,EAAS9F,mBAAqBD,EAAOC,kBACrC8F,EAAS5F,qBAAuBH,EAAOG,oBACvC4F,EAAS1F,mBACPL,EAAOC,kBAAoBD,EAAOG,oBACpC4F,EAAS7F,sBACwB,IAA/B6F,EAAS9F,kBACL,EACCL,KAAKyD,IAAI0C,EAAS9F,mBAAqB8F,EAASxF,aACjD,KACCwF,EAAS9F,kBAAoB,GAAK,EAAI,GAC7C8F,EAAS3F,wBAC0B,IAAjC2F,EAAS5F,oBACL,EACCP,KAAKyD,IAAI0C,EAAS5F,qBAAuB4F,EAASvF,eACnD,KACCuF,EAAS5F,oBAAsB,GAAK,EAAI,GAC/C4F,EAASzF,sBACwB,IAA/ByF,EAAS1F,kBACL,EACCT,KAAKyD,IAAI0C,EAAS1F,oBAChB0F,EAASxF,aAAewF,EAASvF,gBACpC,KACCuF,EAAS1F,kBAAoB,GAAK,EAAI,GAE7C8F,EAAQzF,YAAcyF,EAAQzF,aAAeV,EAAOU,YACpDyF,EAAQxF,SAAWwF,EAAQxF,UAAYX,EAAOW,SAC9CwF,EAAQ5F,cAAgBP,EAAOO,aAC/B4F,EAAQ3F,gBAAkBR,EAAOQ,eACjC2F,EAAQlG,mBAAqBD,EAAOC,kBACpCkG,EAAQhG,qBAAuBH,EAAOG,oBACtCgG,EAAQ9F,mBACNL,EAAOC,kBAAoBD,EAAOG,oBACpCgG,EAAQjG,sBACwB,IAA9BiG,EAAQlG,kBACJ,EACCL,KAAKyD,IAAI8C,EAAQlG,mBAAqBkG,EAAQ5F,aAC/C,KACC4F,EAAQlG,kBAAoB,GAAK,EAAI,GAC5CkG,EAAQ/F,wBAC0B,IAAhC+F,EAAQhG,oBACJ,EACCP,KAAKyD,IAAI8C,EAAQhG,qBAAuBgG,EAAQ3F,eACjD,KACC2F,EAAQhG,oBAAsB,GAAK,EAAI,GAC9CgG,EAAQ7F,sBACwB,IAA9B6F,EAAQ9F,kBACJ,EACCT,KAAKyD,IAAI8C,EAAQ9F,oBACf8F,EAAQ5F,aAAe4F,EAAQ3F,gBAClC,KACC2F,EAAQ9F,kBAAoB,GAAK,EAAI,GAE5C8F,EAAQO,QAAQzU,KAAK+N,GAEdpO,IACN,IAWH,OATA+T,EAAavG,SAAQ,SAAC2G,GACpBA,EAASG,SAAS9G,SAAQ,SAAC+G,GACzBA,EAAQO,QAAQC,aAGlBZ,EAASG,SAASS,aAEpBhB,EAAagB,UAENhB,IACN,CAACjM,IACEkN,EAAU3O,mBAAQ,WACtB,IAAI4O,EAAkB,EADM,EAGiBnN,EAAK/H,QAChD,SAACC,EAAOoO,GAWN,OAVIA,IACG6G,IACHA,EAAkB7G,EAAOY,uBACzBhP,EAAM,GAAKiV,EACXjV,EAAM,GAAKiV,GAGbjV,EAAM,IAAMoO,EAAOC,kBACnBrO,EAAM,IAAMoO,EAAOK,mBAEdzO,IAET,CAAC,EAAG,IAjBsB,mBAGrBkV,EAHqB,KAGJC,EAHI,KAoBtB9G,EAAoB6G,EAAkBD,EACtC3G,EACkB,IAAtBD,EACI,EACCL,KAAKyD,IAAIpD,GAAqB4G,EAC/B,KACC5G,GAAqB,EAAI,GAAK,GAC/B+G,EAAmB/G,GAAqB,EACxCE,EAAsB4G,EAAoBF,EAC1CzG,EACoB,IAAxBD,EACI,EACCP,KAAKyD,IAAIlD,GAAuB0G,EACjC,KACC1G,GAAuB,EAAI,GAAK,GACjC8G,EAAqB9G,GAAuB,EAnCtB,EAwCxBqD,GAAiBvD,EAAmBC,GAxCZ,mBAsC1BgH,EAtC0B,KAuC1BC,EAvC0B,OA4CxB3D,GAAiBrD,EAAqBC,GA5Cd,mBA0C1BgH,EA1C0B,KA2C1BC,EA3C0B,KA8C5B,MAAO,CACLR,gBAAgB,IAAD,OAAMA,GACrBG,mBACAF,gBAAgB,IAAD,OAAMA,EAAgBQ,QAAQ,IAC7CrH,kBAAmBiH,EACnBhH,sBAAuBiH,EACvBF,qBACAF,kBAAkB,IAAD,OAAMA,EAAkBO,QAAQ,IACjDnH,oBAAqBiH,EACrBhH,wBAAyBiH,KAE1B,CAAC3N,IAsHJ,OApHA2D,qBAAU,WACR,IAAMkK,EAAmB,uCAAG,sDAAA9N,EAAA,sDACpB+N,EAAc/H,WAASgI,QAAQhH,QAAQ,QACvCiH,EAAgB/O,OAAO8E,aAAaiH,QAAQ,wBAC5CiD,EAAYD,EACdjI,WAASC,QAAQgI,GACjBF,EACEI,EAAUnI,WAASgI,QACnBlM,EAAQ,IACVC,EAAS,EACTqM,GAAW,EACX1I,EAAUzF,EAAK3H,QACfiQ,EAAuC,GACvC8F,EAAiC,GACjCC,EAAkC,GACtC1R,GAAW,GAde,mCAkBK+E,EACzBD,EACAwM,EACAC,EACArM,EACAC,GACA,GAxBoB,QAkBhB0D,EAlBgB,OA0BtB1D,GAAUD,EAEVuM,EAAkBA,EAAgBlG,OAChC1C,EAAa/M,QACX,SAACkN,GAAD,MAA+C,SAA9BA,EAAYC,kBAGjCyI,EAAmBA,EAAiBnG,OAClC1C,EAAa/M,QACX,SAACkN,GAAD,MAA+C,SAA9BA,EAAYC,kBAI7BJ,EAAarL,OAAS0H,IACxBsM,GAAW,GAxCS,WA0CfA,EA1Ce,4EA4CxBjR,EAAS,CACPnE,MAAO,yBACPK,QAAS,KAAEA,UA9CW,QAkD1BgV,EAAgB/E,KAAKvE,IACrBuJ,EAAiBhF,KAAKvE,IAEtBW,EAAUF,GAAsBuI,EAAarI,EAAS2I,GArD5B,EAsDS/F,GACjC5C,EACA4I,GAxDwB,mBAsDzB5I,EAtDyB,KAsDhB6C,EAtDgB,KA2D1B7C,EAAUiD,GAAiBjD,EAAS,IAEpCxG,OAAO8E,aAAaC,QAAQ,cAAepD,KAAKC,UAAU4E,IAC1DxG,OAAO8E,aAAaC,QAAQ,uBAAwBkK,EAAQjM,SAE5DuJ,EAAQ/F,GACRmG,EAA6BtD,EAAsBnO,QACnDuR,EAAsBpD,EAAsBnO,OAAS,GACrDwC,GAAW,GACXyO,GAAiB,GApES,2DAAH,qDAuEpBH,IACHC,GAAmB,GACnB2C,OAED,CAAC5C,EAAiBjL,EAAMrD,EAAY8E,EAAMvE,IAE7CyG,qBAAU,WACR,IAAM2K,EAAe,uCAAG,8BAAAvO,EAAA,6DACtBpD,GAAW,GADW,kBAISuF,EAAeT,EAAMoK,GAJ9B,OAIdzJ,EAJc,OAKduG,EAAevG,EAAenK,QAEjC,SAACC,EAAOqW,GAET,OADArW,EAAMqW,EAAW1I,QAAU0I,EAAWC,UAC/BtW,IACN,IAEHsT,EAAQ9C,GAAiB1I,EAAM2I,IAZX,gDAcpBzL,EAAS,CACPnE,MAAO,8BACPK,QAAS,KAAEA,UAhBO,QAoBtBuD,GAAW,GApBW,yDAAH,qDAuBjBwO,IAAkBE,GAAuBQ,EAAe1R,SAC1DmR,GAAuB,GACvBgD,OAED,CACDtO,EACA6L,EACAV,EACAE,EACAnO,EACAP,EACA8E,IAIA,sBAAK/I,UAAU,SAAf,UACE,yBAAQA,UAAU,qCAAlB,UACE,cAAC,EAAD,oBAAQ+I,EAAKP,UAAb,sBACCxE,GAAW,cAACa,EAAD,CAAY7E,UAAU,SAClC,cAAC+V,EAAD,CAAc/V,UAAU,UAAUkJ,GAAG,UAArC,wBAIF,uBAAMlJ,UAAU,sCAAhB,UACE,qBAAKc,MAAO,CAAEC,MAAO,KAArB,SAA6BsD,MAC5B0O,GACC,qBAAKjS,MAAO,CAAEC,MAAO,KAArB,SACE,cAAC,EAAD,CACEL,QAAO,gBAAWuS,EAAX,gCACPzS,aAAa,EACbC,UAAW,kBAAMuS,GAAsB,QAI7C,sBAAKlS,MAAO,CAAEC,MAlzBF,MAkzBZ,UACE,gCACE,cAAC,EAAD,8BACA,sBAAKf,UAAU,+EAAf,UACE,sBACEA,UAAU,4BACVc,MAAO,CAAEC,MAAOoL,IAFlB,UAIE,qBAAKnM,UAAU,gBAAf,8BACA,qBAAKA,UAAU,OAAf,SAAuBwU,EAAQC,qBAEjC,sBACEzU,UAAU,4BACVc,MAAO,CAAEC,MAAOoL,IAFlB,UAIE,qBAAKnM,UAAU,gBAAf,8BACA,qBACEA,UAAS,eACPwU,EAAQI,iBAAmB,iBAAmB,gBAFlD,SAKGJ,EAAQE,qBAGb,sBACE1U,UAAU,4BACVc,MAAO,CAAEC,MAAOoL,IAFlB,UAIE,qBAAKnM,UAAU,gBAAf,0BACA,qBACEA,UAAS,eACPwU,EAAQI,iBAAmB,iBAAmB,gBAFlD,SAKGJ,EAAQ3G,uBAGb,sBACE7N,UAAU,4BACVc,MAAO,CAAEC,MAAOoL,IAFlB,UAIE,qBAAKnM,UAAU,gBAAf,0BACA,qBACEA,UAAS,eACPwU,EAAQI,iBAAmB,iBAAmB,gBAFlD,SAKGJ,EAAQ1G,2BAGb,sBACE9N,UAAU,4BACVc,MAAO,CAAEC,MAAOoL,IAFlB,UAIE,qBAAKnM,UAAU,gBAAf,gCACA,qBACEA,UAAS,eACPwU,EAAQK,mBACJ,iBACA,gBAJR,SAOGL,EAAQG,uBAGb,sBACE3U,UAAU,4BACVc,MAAO,CAAEC,MAAOoL,IAFlB,UAIE,qBAAKnM,UAAU,gBAAf,4BACA,qBACEA,UAAS,eACPwU,EAAQK,mBACJ,iBACA,gBAJR,SAOGL,EAAQzG,yBAGb,sBACE/N,UAAU,4BACVc,MAAO,CAAEC,MAAOoL,IAFlB,UAIE,qBAAKnM,UAAU,gBAAf,4BACA,qBACEA,UAAS,eACPwU,EAAQK,mBACJ,iBACA,gBAJR,SAOGL,EAAQxG,mCAKhBsF,EAAUpD,KAAI,SAACyD,GAAc,IAAD,EAQvBlC,GAAkBkC,GANpB7B,EAFyB,EAEzBA,mBACAC,EAHyB,EAGzBA,uBACAC,EAJyB,EAIzBA,qBACAC,EALyB,EAKzBA,yBACAC,EANyB,EAMzBA,mBACAC,EAPyB,EAOzBA,uBAGF,OACE,sBAAKnS,UAAU,OAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,cAAC,EAAD,UAAK2T,EAASnH,KAAKwJ,SAAS,eAE5B,sBACEhW,UAAS,qDACP2T,EAAS9F,mBAAqB,EAC1B,iBACA,gBAEN/M,MAAO,CAAEC,MAAOmL,IANlB,SAQGyH,EAASpF,SAAWuD,EAAqB,KAE5C,sBACE9R,UAAS,6CACP2T,EAAS9F,mBAAqB,EAC1B,iBACA,gBAEN/M,MAAO,CAAEC,MAAOmL,IANlB,SAQGyH,EAASpF,SAAWwD,EAAyB,KAEhD,sBACE/R,UAAS,6CACP2T,EAAS5F,qBAAuB,EAC5B,iBACA,gBAENjN,MAAO,CAAEC,MAAOmL,IANlB,SAQGyH,EAASrF,YAAc0D,EAAuB,KAEjD,sBACEhS,UAAS,6CACP2T,EAAS5F,qBAAuB,EAC5B,iBACA,gBAENjN,MAAO,CAAEC,MAAOmL,IANlB,SAQGyH,EAASrF,YAAc2D,EAA2B,KAErD,sBACEjS,UAAS,6CACP2T,EAAS1F,mBAAqB,EAC1B,iBACA,gBAENnN,MAAO,CAAEC,MAAOmL,IANlB,SAQGgG,IAEH,sBACElS,UAAS,6CACP2T,EAAS1F,mBAAqB,EAC1B,iBACA,gBAENnN,MAAO,CAAEC,MAAOmL,IANlB,SAQGiG,OAGJwB,EAASG,SAAS5D,KAAI,SAAC6D,EAASkC,GAAe,IAAD,EAQzCxE,GAAkBsC,GANpBjC,EAF2C,EAE3CA,mBACAC,EAH2C,EAG3CA,uBACAC,EAJ2C,EAI3CA,qBACAC,EAL2C,EAK3CA,yBACAC,EAN2C,EAM3CA,mBACAC,EAP2C,EAO3CA,uBAGF,OACE,sBAEEnS,UAAS,UAAmB,IAAdiW,EAAkB,OAAS,SAF3C,UAIE,sBAAKjW,UAAU,oBAAf,UACE,cAAC,EAAD,yBAAa+T,EAAQM,eACrB,sBACErU,UAAS,oDACP+T,EAAQlG,mBAAqB,EACzB,iBACA,gBAEN/M,MAAO,CAAEC,MAAOmL,IANlB,SAQG6H,EAAQxF,SAAWuD,EAAqB,KAE3C,sBACE9R,UAAS,4CACP+T,EAAQlG,mBAAqB,EACzB,iBACA,gBAEN/M,MAAO,CAAEC,MAAOmL,IANlB,SAQG6H,EAAQxF,SAAWwD,EAAyB,KAE/C,sBACE/R,UAAS,4CACP+T,EAAQhG,qBAAuB,EAC3B,iBACA,gBAENjN,MAAO,CAAEC,MAAOmL,IANlB,SAQG6H,EAAQzF,YAAc0D,EAAuB,KAEhD,sBACEhS,UAAS,4CACP+T,EAAQhG,qBAAuB,EAC3B,iBACA,gBAENjN,MAAO,CAAEC,MAAOmL,IANlB,SAQG6H,EAAQzF,YAAc2D,EAA2B,KAEpD,sBACEjS,UAAS,4CACP+T,EAAQ9F,mBAAqB,EACzB,iBACA,gBAENnN,MAAO,CAAEC,MAAOmL,IANlB,SAQGgG,IAEH,sBACElS,UAAS,4CACP+T,EAAQ9F,mBAAqB,EACzB,iBACA,gBAENnN,MAAO,CAAEC,MAAOmL,IANlB,SAQGiG,OAGJ4B,EAAQO,QAAQpE,KAAI,SAACtC,GACpB,IAAKA,EACH,OAAO,KAGT,IAAM4F,EAAUnG,WAASC,QAAQM,EAAOpB,MALT,EAa3BiF,GAAkB7D,GANpBkE,EAP6B,EAO7BA,mBACAC,EAR6B,EAQ7BA,uBACAC,EAT6B,EAS7BA,qBACAC,EAV6B,EAU7BA,yBACAC,EAX6B,EAW7BA,mBACAC,EAZ6B,EAY7BA,uBAEI+D,EAAgB9U,OAAOgS,OAAOxF,EAAOnE,SAG3C,OAFAyM,EAAcvF,KAAKlE,IAGjB,sBAEEzM,UAAU,oDAFZ,UAIE,sBAAKA,UAAU,oBAAf,UACE,cAAC,EAAD,UAAKwT,EAAQwC,SAAS,UACtB,sBAAMhW,UAAU,wBAAhB,SACGwT,EAAQwC,SAAS,cAGtB,sBAAKhW,UAAU,yBAAf,UACE,qBACEA,UAAU,0CACVc,MAAO,CAAEC,MAAOmL,IAFlB,kBAMA,qBACElM,UAAU,0CACVc,MAAO,CAAEC,MAAOmL,IAFlB,iBAMA,qBACElM,UAAU,0CACVc,MAAO,CAAEC,MAAOmL,IAFlB,kBAMA,qBACElM,UAAU,0CACVc,MAAO,CAAEC,MAAOmL,IAFlB,kBAMA,qBACElM,UAAU,kDACVc,MAAO,CAAEC,MAAOmL,IAFlB,0BAMA,qBACElM,UAAU,0CACVc,MAAO,CAAEC,MAAOmL,IAFlB,0BAMA,qBACElM,UAAU,0CACVc,MAAO,CAAEC,MAAOmL,IAFlB,4BAMA,qBACElM,UAAU,0CACVc,MAAO,CAAEC,MAAOmL,IAFlB,4BAMA,qBACElM,UAAU,0CACVc,MAAO,CAAEC,MAAOmL,IAFlB,0BAMA,qBACElM,UAAU,0CACVc,MAAO,CAAEC,MAAOmL,IAFlB,6BAODgK,EAAchG,KAAI,SAACO,GAClB,IAAMnC,EAAcmC,EAAS5B,iBAAmB,EAC1CsH,EAAU1F,EAAS7B,MAAMnN,OAAS,EAFT,EAU3BgQ,GAAkBhB,GANpBqB,EAJ6B,EAI7BA,mBACAC,EAL6B,EAK7BA,uBACAC,EAN6B,EAM7BA,qBACAC,EAP6B,EAO7BA,yBACAC,EAR6B,EAQ7BA,mBACAC,EAT6B,EAS7BA,uBAGF,OACE,sBAEEnS,UAAU,yBAFZ,UAIE,qBACEA,UAAU,cACVc,MAAO,CAAEC,MAAOmL,IAFlB,SAIGuE,EAASrD,WAAWD,SAEvB,qBACEnN,UAAU,gBACVc,MAAO,CAAEC,MAAOmL,IAFlB,SAIGuE,EAAS9D,KAAKuD,KAAI,SAACa,EAAKqF,GACvB,OACE,qBAEEpW,UAAU,cAFZ,mBAKI+Q,EAAI3B,aALR,eAMS2B,EAAItB,UAAU+B,YAAY,KAL5B4E,QAUb,qBACEpW,UAAU,gBACVc,MAAO,CAAEC,MAAOmL,IAFlB,SAIGuE,EAAS7B,MAAMsB,KAAI,SAACY,EAAMsF,GACzB,OACE,qBAEEpW,UAAU,cAFZ,mBAKI8Q,EAAK1B,aALT,eAMS0B,EAAKrB,UAAU+B,YACpB,KANG4E,QAYb,qBACEpW,UAAU,8BACVc,MAAO,CAAEC,MAAOmL,IAFlB,SAIGoC,EAAW,UACLmC,EAAS5B,kBACZ,KAEN,qBACE7O,UAAS,8BACPyQ,EAAS5C,mBAAqB,EAC1B,iBACA,gBAEN/M,MAAO,CAAEC,MAAOmL,IANlB,SAQGiK,EAAUrE,EAAqB,KAElC,qBACE9R,UAAS,sBACPyQ,EAAS5C,mBAAqB,EAC1B,iBACA,gBAEN/M,MAAO,CAAEC,MAAOmL,IANlB,SAQGiK,EAAUpE,EAAyB,KAEtC,qBACE/R,UAAS,sBACPyQ,EAAS1C,qBAAuB,EAC5B,iBACA,gBAENjN,MAAO,CAAEC,MAAOmL,IANlB,SAQGoC,EAAc0D,EAAuB,KAExC,qBACEhS,UAAS,sBACPyQ,EAAS1C,qBAAuB,EAC5B,iBACA,gBAENjN,MAAO,CAAEC,MAAOmL,IANlB,SAQGoC,EACG2D,EACA,KAEN,qBACEjS,UAAS,sBACPyQ,EAASxC,mBAAqB,EAC1B,iBACA,gBAENnN,MAAO,CAAEC,MAAOmL,IANlB,SAQGgG,IAEH,qBACElS,UAAS,sBACPyQ,EAASxC,mBAAqB,EAC1B,iBACA,gBAENnN,MAAO,CAAEC,MAAOmL,IANlB,SAQGiG,MAjHE1B,EAASrD,WAAWD,WAuH/B,sBAAKnN,UAAU,kDAAf,UACE,sBACEA,UAAS,oDACP4N,EAAOC,mBAAqB,EACxB,iBACA,gBAEN/M,MAAO,CAAEC,MAAOmL,IANlB,SAQG0B,EAAOW,SAAWuD,EAAqB,KAE1C,sBACE9R,UAAS,4CACP4N,EAAOC,mBAAqB,EACxB,iBACA,gBAEN/M,MAAO,CAAEC,MAAOmL,IANlB,SAQG0B,EAAOW,SAAWwD,EAAyB,KAE9C,sBACE/R,UAAS,4CACP4N,EAAOG,qBAAuB,EAC1B,iBACA,gBAENjN,MAAO,CAAEC,MAAOmL,IANlB,SAQG0B,EAAOU,YAAc0D,EAAuB,KAE/C,sBACEhS,UAAS,4CACP4N,EAAOG,qBAAuB,EAC1B,iBACA,gBAENjN,MAAO,CAAEC,MAAOmL,IANlB,SAQG0B,EAAOU,YACJ2D,EACA,KAEN,sBACEjS,UAAS,4CACP4N,EAAOK,mBAAqB,EACxB,iBACA,gBAENnN,MAAO,CAAEC,MAAOmL,IANlB,SAQGgG,IAEH,sBACElS,UAAS,4CACP4N,EAAOK,mBAAqB,EACxB,iBACA,gBAENnN,MAAO,CAAEC,MAAOmL,IANlB,SAQGiG,SAzQAvE,EAAOpB,WArFbuH,EAAQvH,KAAKjD,cA7ECoK,EAASnH,KAAKjD,sBCr4BxC8M,gBAxBO,WACpB,IAAMC,EAAWC,cACXxN,ECdsB,WAC5B,IAAMyN,EAAWjQ,OAAO8E,aAAaiH,QAAQ,QAE7C,OAAIkE,EACKtO,KAAK2K,MAAM2D,GAEX,KDQIC,GACPC,EAAwB,CAC5B,cAAC,IAAD,CAAsBC,KAAK,SAASC,OAAK,EAACC,UAAW3M,GAAzC,UACZ,cAAC,IAAD,CAAiChB,GAAG,UAArB,mBAEX4N,EAAsB,CAC1B,cAAC,IAAD,CAAwBH,KAAK,WAAWC,OAAK,EAA7C,SACE,cAACG,GAAD,CAAahO,KAAMA,KADT,YAGZ,cAAC,IAAD,CAAuB4N,KAAK,UAAUC,OAAK,EAA3C,SACE,cAACI,EAAD,CAAYjO,KAAMA,KADR,WAGZ,cAAC,IAAD,CAAmCG,GAAG,YAAvB,qBAGjB,OACE,cAAC,IAAD,CAAQoN,SAAUA,EAAlB,SACGvN,EAAO+N,EAAsBJ,OE3BpCO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.c23f550a.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const mergeClassNames = (base: string, overrides: string) => {\n  const overrideKeys = overrides\n    .split(\" \")\n    .reduce<string[]>((carry, override) => {\n      const prefix = override.split(\"-\").slice(0, -1).join(\"-\");\n\n      if (prefix !== \"\") {\n        carry.push(prefix);\n      }\n\n      return carry;\n    }, []);\n  const filteredBaseclassNames = base\n    .split(\" \")\n    .filter(\n      (className) =>\n        !overrideKeys.some((overrideKey) => className.startsWith(overrideKey))\n    )\n    .join(\" \");\n  return `${filteredBaseclassNames} ${overrides}`;\n};\n\nexport function mergeRefs<T = any>(\n  refs: Array<React.MutableRefObject<T> | React.LegacyRef<T>>\n): React.RefCallback<T> {\n  return (value) => {\n    refs.forEach((ref) => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref !== null) {\n        (ref as React.MutableRefObject<T | null>).current = value;\n      }\n    });\n  };\n}\n","import React, { ReactNode } from \"react\";\nimport { X } from \"react-feather\";\nimport { mergeClassNames } from \"../../libs/components\";\n\ninterface AlertProps {\n  className?: string;\n  closeButtonClassName?: string;\n  title?: ReactNode;\n  icon?: ReactNode;\n  dismissable?: boolean;\n  onDismiss?: () => void;\n  message: ReactNode;\n}\n\nconst Alert: React.FC<AlertProps> = ({\n  title = null,\n  icon = null,\n  className = \"\",\n  closeButtonClassName = \"\",\n  dismissable = false,\n  onDismiss = null,\n  message,\n}) => {\n  return (\n    <div\n      className={mergeClassNames(\n        \"relative flex items-center rounded-lg py-2 px-4\",\n        className\n      )}\n      role=\"alert\"\n    >\n      {dismissable && onDismiss && (\n        <button\n          className={mergeClassNames(\n            \"absolute top-0 right-0 rounded-full p-1 m-1 transform ease-in-out duration-300\",\n            closeButtonClassName\n          )}\n          type=\"button\"\n          title=\"Close\"\n          onClick={() => onDismiss()}\n        >\n          {<X className=\"w-4 h-4\" />}\n        </button>\n      )}\n      {icon && (\n        <div\n          className=\"mr-4 flex-shrink-0\"\n          style={{ width: \"30px\", height: \"30px\" }}\n        >\n          {icon}\n        </div>\n      )}\n      <div>\n        {title && <h3 className=\"font-bold mb-1\">{title}</h3>}\n        <p>{message}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Alert;\n","import React, { ComponentProps } from \"react\";\nimport { AlertCircle } from \"react-feather\";\nimport Alert from \"./Alert\";\nimport { mergeClassNames } from \"../../libs/components\";\n\ninterface ErrorAlertProps\n  extends Omit<ComponentProps<typeof Alert>, \"icon\" | \"closeButtonClassName\"> {}\n\nconst ErrorAlert: React.FC<ErrorAlertProps> = ({\n  className = \"\",\n  ...otherProps\n}) => {\n  return (\n    <Alert\n      className={mergeClassNames(\"bg-red-200 text-red-900\", className)}\n      closeButtonClassName=\"text-red-900 hover:bg-red-300 focus:bg-red-300\"\n      icon={<AlertCircle />}\n      {...otherProps}\n    />\n  );\n};\n\nexport default ErrorAlert;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLoader(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    height: 24,\n    width: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 12,\n    cy: 12,\n    r: 10,\n    stroke: \"currentColor\",\n    strokeWidth: 4,\n    style: {\n      opacity: 0.25\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    style: {\n      opacity: 0.75\n    },\n    d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLoader);\nexport default __webpack_public_path__ + \"static/media/loader.f191de2e.svg\";\nexport { ForwardRef as ReactComponent };","import React, { SVGProps } from \"react\";\nimport { mergeClassNames } from \"../../libs/components\";\nimport { ReactComponent as LoaderImage } from \"../../images/loader.svg\";\n\nconst LoaderIcon: React.FC<SVGProps<SVGSVGElement>> = ({\n  className = \"\",\n  ...otherProps\n}) => {\n  return (\n    <LoaderImage\n      className={mergeClassNames(\"animate-spin\", className)}\n      {...otherProps}\n    />\n  );\n};\n\nexport default LoaderIcon;\n","import React, {\n  useRef,\n  useContext,\n  useEffect,\n  useCallback,\n  useState,\n  useMemo,\n} from \"react\";\nimport ErrorAlert from \"../../components/alerts/Error\";\nimport LoaderIcon from \"../../components/icons/Loader\";\n\nexport const usePrevious = <T extends any>(value: T): T | null => {\n  const ref = useRef<T | null>(null);\n  const previousValue = ref.current;\n\n  if (value !== undefined && value !== previousValue) {\n    ref.current = value;\n  }\n\n  return previousValue;\n};\n\ninterface ErrorAlertProps {\n  className?: string;\n  dismissable?: boolean;\n}\nexport const useErrorAlert = () => {\n  const [errorData, set] = useState<{\n    title: string;\n    message: React.ReactNode;\n  } | null>(null);\n\n  const clear = () => set(null);\n\n  const error = (props?: ErrorAlertProps) => {\n    const { className = \"\", dismissable = true } = props || {};\n    return errorData ? (\n      <ErrorAlert\n        className={className}\n        title={errorData.title}\n        message={errorData.message}\n        dismissable={dismissable}\n        onDismiss={clear}\n      />\n    ) : null;\n  };\n\n  return {\n    error,\n    set,\n    clear,\n    has: () => errorData !== null,\n  };\n};\n\ninterface UseAsyncStateProps {\n  defaultLoading?: boolean;\n}\nexport const useAsyncState = (props?: UseAsyncStateProps) => {\n  const { defaultLoading = false } = props || {};\n  const [loading, setLoading] = useState(defaultLoading);\n  const {\n    error,\n    set: setError,\n    clear: clearError,\n    has: hasError,\n  } = useErrorAlert();\n\n  const loadingText = (textProps: { loading: string; default: string }) => {\n    return loading ? (\n      <div className=\"flex items-center\">\n        <LoaderIcon className=\"mr-2\" />\n        <span>{textProps.loading}</span>\n      </div>\n    ) : (\n      textProps.default\n    );\n  };\n\n  return {\n    loading,\n    loadingText,\n    setLoading,\n    error,\n    setError,\n    clearError,\n    hasError,\n  };\n};\n","import React, { HTMLProps } from \"react\";\nimport { mergeClassNames } from \"../../libs/components\";\n\nconst H1: React.FC<HTMLProps<HTMLHeadingElement>> = ({\n  className = \"\",\n  children,\n  ...otherProps\n}) => {\n  return (\n    <h1\n      className={mergeClassNames(\n        \"font-heading font-bold text-5xl text-black\",\n        className\n      )}\n      {...otherProps}\n    >\n      {children}\n    </h1>\n  );\n};\n\nexport default H1;\n","import React, { forwardRef, useMemo, useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { mergeClassNames } from \"../../libs/components\";\nimport { debounce } from \"../../libs/utils\";\n\ninterface InputProps\n  extends React.DetailedHTMLProps<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement\n  > {\n  error?: boolean;\n  className?: string;\n  debounceOnChange?: (newValue: string) => void;\n  debounceTimeout?: number;\n}\n\nconst Input = forwardRef<HTMLInputElement, InputProps>(\n  (\n    {\n      className = \"\",\n      id = nanoid(),\n      error = false,\n      debounceOnChange = undefined,\n      debounceTimeout = 500,\n      value,\n      onChange,\n      ...inputProps\n    },\n    ref\n  ) => {\n    const [internalValue, setInternalValue] = useState(\n      value === undefined ? \"\" : value\n    );\n\n    const debouncedUpdate = useMemo(\n      () =>\n        debounce((newValue: string) => {\n          if (debounceOnChange) {\n            debounceOnChange(newValue);\n          }\n        }, debounceTimeout),\n      [debounceOnChange, debounceTimeout]\n    );\n\n    const internalOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setInternalValue(e.target.value);\n      debouncedUpdate(e.target.value);\n    };\n\n    return (\n      <input\n        ref={ref}\n        id={id}\n        className={mergeClassNames(\n          `py-3 px-4 w-full rounded-lg default-transition border-2 focus:border-black ${\n            error ? \"border-red-500\" : \"border-gray-300\"\n          }`,\n          className\n        )}\n        value={debounceOnChange ? internalValue : value}\n        onChange={debounceOnChange ? internalOnChange : onChange}\n        {...inputProps}\n      />\n    );\n  }\n);\n\nexport default Input;\n","// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\nexport function escapeRegExp(value: string) {\n  return value.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\n}\n\nexport function debounce<T extends (...args: any) => void>(\n  func: T,\n  delay: number\n): T {\n  let timeoutId: number | null = null;\n  let previousCall: number = 0;\n  let args: any = undefined;\n\n  const delayedCallback = () => {\n    const timeSinceLastCall = Date.now() - previousCall;\n\n    if (timeSinceLastCall > delay) {\n      func(...args);\n      timeoutId = null;\n      previousCall = 0;\n      args = undefined;\n    } else {\n      timeoutId = window.setTimeout(delayedCallback, delay - timeSinceLastCall);\n    }\n  };\n\n  return (((...newArgs: any) => {\n    if (timeoutId === null) {\n      timeoutId = window.setTimeout(delayedCallback, delay);\n    }\n\n    args = newArgs;\n    previousCall = Date.now();\n  }) as unknown) as T;\n}\n\nexport function clampImageHeight(\n  height: number,\n  width: number,\n  maxHeight: number\n) {\n  let newHeight = height;\n  let newWidth = width;\n\n  if (height > maxHeight) {\n    const ratio = maxHeight / height;\n    newHeight = height * ratio;\n    newWidth = width * ratio;\n  }\n\n  return [newHeight, newWidth] as [number, number];\n}\n\nexport function clampImageWidth(\n  height: number,\n  width: number,\n  maxWidth: number\n) {\n  let newHeight = height;\n  let newWidth = width;\n\n  if (width > maxWidth) {\n    const ratio = maxWidth / width;\n    newHeight = height * ratio;\n    newWidth = width * ratio;\n  }\n\n  return [newHeight, newWidth] as [number, number];\n}\n\nexport function clampImageSize(\n  height: number,\n  width: number,\n  maxHeight: number,\n  maxWidth: number\n) {\n  return clampImageWidth(\n    ...clampImageHeight(height, width, maxHeight),\n    maxWidth\n  );\n}\n","import React, { forwardRef } from \"react\";\nimport { mergeClassNames } from \"../../libs/components\";\n\nconst Button = forwardRef<\n  HTMLButtonElement,\n  React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  >\n>(({ children, className = \"\", type = \"button\", ...props }, ref) => {\n  return (\n    <button\n      ref={ref}\n      type={type}\n      className={mergeClassNames(\n        \"py-3 px-4 flex items-center justify-center rounded-lg font-bold default-transition\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n});\n\nexport default Button;\n","import React, { ComponentProps, forwardRef } from \"react\";\nimport { mergeClassNames } from \"../../libs/components\";\nimport Button from \"./Button\";\n\nconst PrimaryButton = forwardRef<\n  HTMLButtonElement,\n  ComponentProps<typeof Button>\n>(({ className = \"\", ...props }, ref) => {\n  return (\n    <Button\n      ref={ref}\n      className={mergeClassNames(\n        \"bg-black text-white hover:ring-4 hover:ring-gray-200 focus:ring-4 focus:ring-gray-200\",\n        className\n      )}\n      {...props}\n    />\n  );\n});\n\nexport default PrimaryButton;\n","import { DateTime } from \"luxon\";\nimport { MarketData, Transaction, User } from \"../../types\";\n\nconst API_URL = \"https://global-prd-api.hellostake.com/api\";\n\nfunction apiUrl(uri: string) {\n  return `${API_URL}/${uri}`;\n}\n\nexport async function login(username: string, password: string, otp?: string) {\n  const data: any = {\n    username,\n    password,\n    platformType: \"WEB_f5K2x3\",\n    rememberMeDays: 30,\n  };\n\n  if (otp) {\n    data.otp = otp;\n  }\n\n  const response = await fetch(apiUrl(\"sessions/v2/createSession\"), {\n    method: \"POST\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    credentials: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    redirect: \"follow\",\n    referrerPolicy: \"no-referrer\",\n    body: JSON.stringify(data),\n  });\n\n  if (response.ok) {\n    const responseData = await response.json();\n    return {\n      firstName: responseData.firstName,\n      lastName: responseData.lastName,\n      regionIdentifier: responseData.regionIdentifier,\n      sessionKey: responseData.sessionKey,\n      userID: responseData.userID,\n      username: responseData.username,\n    } as User;\n  } else {\n    if (response.status === 412) {\n      return null;\n    } else {\n      const responseData = await response.json();\n      throw new Error(`Failed to login: ${responseData.message}`);\n    }\n  }\n}\n\nexport async function logout(user: User) {\n  await fetch(apiUrl(`userauth/${user.sessionKey}`), {\n    method: \"DELETE\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    credentials: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    redirect: \"follow\",\n    referrerPolicy: \"no-referrer\",\n  });\n}\n\nexport async function loadTrades(\n  user: User,\n  from: DateTime,\n  to: DateTime,\n  limit: number,\n  offset: number,\n  desc: boolean\n) {\n  const response = await fetch(apiUrl(\"users/accounts/accountTransactions\"), {\n    method: \"POST\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    credentials: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Stake-Session-Token\": user.sessionKey,\n    },\n    redirect: \"follow\",\n    referrerPolicy: \"no-referrer\",\n    body: JSON.stringify({\n      direction: desc ? \"prev\" : \"next\",\n      from: from.toISO(),\n      to: to.toISO(),\n      limit,\n      offset: offset || null,\n    }),\n  });\n\n  if (response.ok) {\n    const responseData = await response.json();\n    return responseData as Transaction[];\n  } else {\n    const responseData = await response.json();\n    throw new Error(`Failed to load transactions: ${responseData.message}`);\n  }\n}\n\nexport async function loadMarketData(user: User, symbols: string[]) {\n  const response = await fetch(\n    apiUrl(`quotes/marketData/${symbols.join(\",\")}`),\n    {\n      method: \"GET\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Stake-Session-Token\": user.sessionKey,\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n    }\n  );\n\n  if (response.ok) {\n    const responseData = await response.json();\n    return responseData.marketDataList as MarketData[];\n  } else {\n    const responseData = await response.json();\n    throw new Error(`Failed to load market data: ${responseData.message}`);\n  }\n}\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { joiResolver } from \"@hookform/resolvers/joi\";\nimport Joi from \"joi\";\nimport { useAsyncState } from \"../libs/hooks/general\";\n\nimport H1 from \"../components/headings/H1\";\nimport Input from \"../components/form/Input\";\nimport PrimaryButton from \"../components/buttons/Primary\";\nimport { login } from \"../libs/clients/stake\";\nimport { useHistory } from \"react-router-dom\";\n\ntype FormValues = {\n  email: string;\n  password: string;\n  otp?: string;\n};\n\nconst formSchema = Joi.object({\n  email: Joi.string().required().email({ tlds: false }),\n  password: Joi.string().required(),\n  otp: Joi.string(),\n});\n\nconst LoginPage: React.FC = () => {\n  const history = useHistory();\n  const [requiresOtp, setRequiresOtp] = useState(false);\n  const emailRef = useRef<HTMLInputElement | null>(null);\n  const { register, errors, formState, handleSubmit } = useForm<FormValues>({\n    criteriaMode: \"all\",\n    resolver: joiResolver(formSchema),\n  });\n  const {\n    loading,\n    loadingText,\n    setLoading,\n    error,\n    setError,\n    clearError,\n  } = useAsyncState();\n\n  useEffect(() => {\n    if (emailRef && emailRef.current) {\n      emailRef.current.focus();\n    }\n  }, []);\n\n  const onSubmit = async (data: FormValues) => {\n    if (requiresOtp && !data.otp) {\n      setError({\n        title: \"MFA Required\",\n        message: \"You need to supply the verifcation code\",\n      });\n      return;\n    }\n\n    clearError();\n    setLoading(true);\n\n    try {\n      const user = await login(\n        data.email,\n        data.password,\n        data.otp ? data.otp : undefined\n      );\n\n      if (user === null) {\n        setRequiresOtp(true);\n        setLoading(false);\n      } else {\n        window.localStorage.setItem(\"user\", JSON.stringify(user));\n        history.push(\"/\");\n      }\n    } catch (e) {\n      setError({\n        title: \"Login failed\",\n        message: e.message,\n      });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center w-screen h-screen pt-20\">\n      <H1>Stake trading journal</H1>\n      {error({ className: \"mt-4\" })}\n      <form\n        className=\"mt-12\"\n        onSubmit={handleSubmit(onSubmit)}\n        style={{ width: 400 }}\n      >\n        <Input\n          ref={(ref) => {\n            register(ref);\n            emailRef.current = ref;\n          }}\n          name=\"email\"\n          type=\"text\"\n          error={!!errors.email}\n          placeholder=\"Email\"\n        />\n        <Input\n          ref={register}\n          className=\"mt-2\"\n          type=\"password\"\n          name=\"password\"\n          error={!!errors.password}\n          placeholder=\"Password\"\n        />\n        {requiresOtp && (\n          <Input\n            ref={register}\n            className=\"mt-2\"\n            name=\"otp\"\n            error={!!errors.password}\n            placeholder=\"Verification code\"\n          />\n        )}\n        <PrimaryButton\n          className=\"mt-6 w-full text-xl text-white\"\n          type=\"submit\"\n          disabled={loading}\n        >\n          {loadingText({\n            loading: \"Logging in...\",\n            default: \"Log in\",\n          })}\n        </PrimaryButton>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { logout } from \"../libs/clients/stake\";\nimport { User } from \"../types\";\n\ninterface LogoutPageProps {\n  user: User;\n}\nconst LogoutPage: React.FC<LogoutPageProps> = ({ user }) => {\n  const history = useHistory();\n\n  useEffect(() => {\n    logout(user);\n    window.localStorage.removeItem(\"user\");\n    window.localStorage.removeItem(\"journalData\");\n    window.localStorage.removeItem(\"journalLastFetchDate\");\n    history.push(\"/login\");\n  }, []);\n\n  return null;\n};\n\nexport default LogoutPage;\n","import React, { HTMLProps } from \"react\";\nimport { mergeClassNames } from \"../../libs/components\";\n\nconst H2: React.FC<HTMLProps<HTMLHeadingElement>> = ({\n  className = \"\",\n  children,\n  ...otherProps\n}) => {\n  return (\n    <h2\n      className={mergeClassNames(\n        \"font-heading font-bold text-4xl text-black\",\n        className\n      )}\n      {...otherProps}\n    >\n      {children}\n    </h2>\n  );\n};\n\nexport default H2;\n","import React, { HTMLProps } from \"react\";\nimport { mergeClassNames } from \"../../libs/components\";\n\nconst H3: React.FC<HTMLProps<HTMLHeadingElement>> = ({\n  className = \"\",\n  children,\n  ...otherProps\n}) => {\n  return (\n    <h3\n      className={mergeClassNames(\n        \"font-heading font-bold text-3xl text-black\",\n        className\n      )}\n      {...otherProps}\n    >\n      {children}\n    </h3>\n  );\n};\n\nexport default H3;\n","import React, { HTMLProps } from \"react\";\nimport { mergeClassNames } from \"../../libs/components\";\n\nconst H4: React.FC<HTMLProps<HTMLHeadingElement>> = ({\n  className = \"\",\n  children,\n  ...otherProps\n}) => {\n  return (\n    <h4\n      className={mergeClassNames(\n        \"font-heading font-bold text-2xl text-black\",\n        className\n      )}\n      {...otherProps}\n    >\n      {children}\n    </h4>\n  );\n};\n\nexport default H4;\n","import React, { ComponentProps } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { mergeClassNames } from \"../../libs/components\";\n\nconst InternalLink: React.FC<ComponentProps<Link>> = ({\n  className = \"\",\n  ...props\n}) => {\n  return (\n    <Link\n      className={mergeClassNames(\n        \"font-bold underline default-transition\",\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\nexport default InternalLink;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { DateTime } from \"luxon\";\nimport { Transaction, User } from \"../types\";\nimport { loadMarketData, loadTrades } from \"../libs/clients/stake\";\nimport { useAsyncState } from \"../libs/hooks/general\";\n\nimport H2 from \"../components/headings/H2\";\nimport H3 from \"../components/headings/H3\";\nimport H4 from \"../components/headings/H4\";\nimport InternalLink from \"../components/links/Internal\";\nimport LoaderIcon from \"../components/icons/Loader\";\nimport ErrorAlert from \"../components/alerts/Error\";\n\nconst TABLE_WIDTH = 1300;\nconst CELL_WIDTH = 125;\nconst SUMMARY_CELL_WIDTH = 140;\n\ninterface BuySellEntry {\n  orderId: string;\n  unitPrice: number;\n  unitQuantity: number;\n  totalPrice: number;\n  date: string;\n}\n\ninterface LogEntry {\n  instrument: {\n    id: string;\n    symbol: string;\n    name: string;\n  };\n  buys: BuySellEntry[];\n  sells: BuySellEntry[];\n  holdingUnitCount: number;\n  realisedProfitRaw: number;\n  realisedProfitPercent: number;\n  unrealisedProfitRaw: number;\n  unrealisedProfitPercent: number;\n  combinedProfitRaw: number;\n  combinedProfitPercent: number;\n  realisedCost: number;\n  unrealisedCost: number;\n}\n\ninterface DayLog {\n  symbols: {\n    [symbol: string]: LogEntry;\n  };\n  realisedProfitRaw: number;\n  realisedProfitPercent: number;\n  unrealisedProfitRaw: number;\n  unrealisedProfitPercent: number;\n  combinedProfitRaw: number;\n  combinedProfitPercent: number;\n  realisedCost: number;\n  unrealisedCost: number;\n  date: string;\n  hasHoldings: boolean;\n  hasSells: boolean;\n  startingAccountBalance: number;\n}\n\ntype DayLogs = Array<DayLog | null>;\n\ninterface WeekLog {\n  date: DateTime;\n  weekOfMonth: number;\n  realisedProfitRaw: number;\n  realisedProfitPercent: number;\n  unrealisedProfitRaw: number;\n  unrealisedProfitPercent: number;\n  combinedProfitRaw: number;\n  combinedProfitPercent: number;\n  realisedCost: number;\n  unrealisedCost: number;\n  dayLogs: DayLogs;\n  hasHoldings: boolean;\n  hasSells: boolean;\n}\n\ntype WeekLogs = WeekLog[];\n\ninterface MonthLog {\n  date: DateTime;\n  realisedProfitRaw: number;\n  realisedProfitPercent: number;\n  unrealisedProfitRaw: number;\n  unrealisedProfitPercent: number;\n  combinedProfitRaw: number;\n  combinedProfitPercent: number;\n  realisedCost: number;\n  unrealisedCost: number;\n  weekLogs: WeekLogs;\n  hasHoldings: boolean;\n  hasSells: boolean;\n}\n\ntype MonthLogs = MonthLog[];\n\nfunction sortTransactionsAsc(a: Transaction, b: Transaction) {\n  if (a.tranWhen < b.tranWhen) {\n    return -1;\n  } else if (a.tranWhen > b.tranWhen) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\n\nfunction sortBuySell(a: BuySellEntry, b: BuySellEntry) {\n  if (a.date < b.date) {\n    return -1;\n  } else if (a.date > b.date) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\n\nfunction sortLogEntries(a: LogEntry, b: LogEntry) {\n  const aEarliestBuyDate = a.buys[0].date;\n  const bEarliestBuyDate = b.buys[0].date;\n\n  if (aEarliestBuyDate < bEarliestBuyDate) {\n    return -1;\n  } else if (aEarliestBuyDate > bEarliestBuyDate) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\n\nfunction fillDataArrayWithBuys(\n  from: DateTime,\n  data: DayLogs,\n  transactions: Transaction[]\n) {\n  let newData = data.slice();\n\n  transactions.forEach((transaction) => {\n    if (transaction.finTranTypeID === \"SPUR\") {\n      const symbol = transaction.instrument.symbol;\n      const date = DateTime.fromISO(transaction.tranWhen);\n      const dataIndex = Math.floor(date.diff(from).as(\"days\"));\n\n      let dayLog = newData[dataIndex];\n\n      if (!dayLog) {\n        dayLog = {\n          symbols: {},\n          realisedProfitRaw: 0,\n          realisedProfitPercent: 0,\n          unrealisedProfitRaw: 0,\n          unrealisedProfitPercent: 0,\n          combinedProfitRaw: 0,\n          combinedProfitPercent: 0,\n          realisedCost: 0,\n          unrealisedCost: 0,\n          date: date.startOf(\"day\").toISO(),\n          hasHoldings: false,\n          hasSells: false,\n          startingAccountBalance:\n            transaction.accountBalance - transaction.accountAmount,\n        };\n      }\n\n      let symbolEntry = dayLog.symbols[symbol];\n\n      if (!symbolEntry) {\n        symbolEntry = {\n          instrument: transaction.instrument,\n          buys: [],\n          sells: [],\n          holdingUnitCount: 0,\n          realisedProfitRaw: 0,\n          realisedProfitPercent: 0,\n          unrealisedProfitRaw: 0,\n          unrealisedProfitPercent: 0,\n          combinedProfitRaw: 0,\n          combinedProfitPercent: 0,\n          realisedCost: 0,\n          unrealisedCost: 0,\n        };\n      }\n\n      let buyIndex = symbolEntry.buys.findIndex(\n        (candidate) => candidate.orderId === transaction.orderID\n      );\n\n      if (buyIndex >= 0) {\n        // Merge it with the other order.\n        const existingBuy = symbolEntry.buys[buyIndex];\n        symbolEntry.buys[buyIndex] = {\n          ...existingBuy,\n          unitQuantity: existingBuy.unitQuantity + transaction.fillQty,\n          totalPrice: existingBuy.totalPrice + transaction.tranAmount,\n        };\n      } else {\n        symbolEntry.buys = symbolEntry.buys.concat({\n          orderId: transaction.orderID,\n          unitPrice: transaction.fillPx,\n          unitQuantity: transaction.fillQty,\n          totalPrice: transaction.tranAmount,\n          date: transaction.tranWhen,\n        });\n      }\n\n      symbolEntry.holdingUnitCount += transaction.fillQty;\n\n      dayLog.symbols = {\n        ...dayLog.symbols,\n        [symbol]: { ...symbolEntry },\n      };\n      newData[dataIndex] = { ...dayLog };\n    }\n  });\n\n  return newData;\n}\n\nfunction fillDataArrayWithSells(data: DayLogs, transactions: Transaction[]) {\n  let newData = data.slice();\n  let unmatchedTransactions: Transaction[] = [];\n\n  transactions.forEach((transaction) => {\n    if (transaction.finTranTypeID === \"SSAL\") {\n      const symbol = transaction.instrument.symbol;\n      let remainingQuantity = transaction.fillQty;\n      let searchIndex = 0;\n\n      while (remainingQuantity > 0 && searchIndex < newData.length) {\n        const dayLog = newData[searchIndex];\n        const symbolEntry = dayLog ? dayLog.symbols[symbol] : undefined;\n\n        if (symbolEntry && symbolEntry.holdingUnitCount >= 0) {\n          const fillQuantity =\n            symbolEntry.holdingUnitCount >= remainingQuantity\n              ? remainingQuantity\n              : remainingQuantity - symbolEntry.holdingUnitCount;\n          newData[searchIndex] = {\n            ...newData[searchIndex],\n            symbols: {\n              ...newData[searchIndex]!.symbols,\n              [symbol]: {\n                ...symbolEntry,\n                holdingUnitCount: symbolEntry.holdingUnitCount - fillQuantity,\n                sells: symbolEntry.sells.concat({\n                  orderId: transaction.orderID,\n                  unitPrice: transaction.fillPx,\n                  unitQuantity: fillQuantity,\n                  totalPrice: transaction.tranAmount,\n                  date: transaction.tranWhen,\n                }),\n              },\n            },\n          } as DayLog;\n\n          remainingQuantity -= fillQuantity;\n        }\n\n        searchIndex++;\n      }\n\n      if (remainingQuantity > 0) {\n        unmatchedTransactions.push({\n          ...transaction,\n          fillQty: remainingQuantity,\n        });\n      }\n    }\n  });\n\n  return [newData, unmatchedTransactions] as [DayLogs, Transaction[]];\n}\n\nfunction calculateProfits(\n  data: DayLogs,\n  symbolPrices: { [symbol: string]: number }\n) {\n  return data.map((dayLog) => {\n    if (!dayLog) {\n      return null;\n    }\n\n    let dayRealisedCost = 0;\n    let dayRealisedGain = 0;\n    let dayUnrealisedCost = 0;\n    let dayUnrealisedGain = 0;\n    let dayHasHoldings = false;\n    let dayHasSells = false;\n\n    const symbols = Object.keys(dayLog.symbols).reduce<DayLog[\"symbols\"]>(\n      (carry, symbol) => {\n        const logEntry = dayLog.symbols[symbol];\n        let quantitySold = 0;\n\n        logEntry.sells.sort(sortBuySell);\n        logEntry.buys.sort(sortBuySell);\n\n        const realisedGain = logEntry.sells.reduce((total, sell) => {\n          quantitySold += sell.unitQuantity;\n          return (total += sell.unitQuantity * sell.unitPrice);\n        }, 0);\n        const [realisedCost, unrealisedCost] = logEntry.buys.reduce(\n          (carry, buy) => {\n            let buyQuantity = buy.unitQuantity;\n\n            if (quantitySold > 0) {\n              if (buyQuantity > quantitySold) {\n                carry[0] = carry[0] + quantitySold * buy.unitPrice;\n                buyQuantity -= quantitySold;\n                quantitySold = 0;\n              } else {\n                carry[0] = carry[0] + buyQuantity * buy.unitPrice;\n                quantitySold -= buyQuantity;\n                buyQuantity = 0;\n              }\n            }\n\n            if (buyQuantity > 0) {\n              carry[1] = carry[1] + buyQuantity * buy.unitPrice;\n            }\n\n            return carry;\n          },\n          [0, 0]\n        );\n        const realisedProfitRaw = realisedGain - realisedCost;\n        const realisedProfitPercent =\n          realisedProfitRaw === 0\n            ? 0\n            : (Math.abs(realisedProfitRaw) / realisedCost) *\n              100 *\n              (realisedProfitRaw < 0 ? -1 : 1);\n\n        const symbolPrice = symbolPrices[symbol] || 0;\n        const unrealisedGain = logEntry.holdingUnitCount * symbolPrice;\n        const unrealisedProfitRaw =\n          symbolPrice && logEntry.holdingUnitCount\n            ? unrealisedGain - unrealisedCost\n            : 0;\n\n        const unrealisedProfitPercent =\n          unrealisedProfitRaw === 0\n            ? 0\n            : (Math.abs(unrealisedProfitRaw) / unrealisedCost) *\n              100 *\n              (unrealisedProfitRaw < 0 ? -1 : 1);\n\n        const combinedProfitRaw =\n          realisedGain + unrealisedGain - (realisedCost + unrealisedCost);\n        const combinedProfitPercent =\n          combinedProfitRaw === 0\n            ? 0\n            : (Math.abs(realisedProfitRaw + unrealisedProfitRaw) /\n                (realisedCost + unrealisedCost)) *\n              100 *\n              (combinedProfitRaw < 0 ? -1 : 1);\n\n        dayRealisedCost += realisedCost;\n        dayRealisedGain += realisedGain;\n        dayUnrealisedCost += unrealisedCost;\n        dayUnrealisedGain += unrealisedGain;\n        dayHasHoldings = dayHasHoldings || logEntry.holdingUnitCount > 0;\n        dayHasSells = dayHasSells || logEntry.sells.length > 0;\n\n        carry[symbol] = {\n          ...logEntry,\n          realisedProfitRaw,\n          realisedProfitPercent,\n          unrealisedProfitRaw,\n          unrealisedProfitPercent,\n          combinedProfitRaw,\n          combinedProfitPercent,\n          realisedCost,\n          unrealisedCost,\n        };\n\n        return carry;\n      },\n      {}\n    );\n\n    const realisedProfitRaw = dayRealisedGain - dayRealisedCost;\n    const realisedProfitPercent =\n      realisedProfitRaw === 0\n        ? 0\n        : (Math.abs(realisedProfitRaw) / dayRealisedCost) *\n          100 *\n          (realisedProfitRaw < 0 ? -1 : 1);\n    const unrealisedProfitRaw = dayUnrealisedGain - dayUnrealisedCost;\n    const unrealisedProfitPercent =\n      unrealisedProfitRaw === 0\n        ? 0\n        : (Math.abs(unrealisedProfitRaw) / dayUnrealisedCost) *\n          100 *\n          (unrealisedProfitRaw < 0 ? -1 : 1);\n    const combinedProfitRaw =\n      dayRealisedGain +\n      dayUnrealisedGain -\n      (dayRealisedCost + dayUnrealisedCost);\n    const combinedProfitPercent =\n      combinedProfitRaw === 0\n        ? 0\n        : (Math.abs(realisedProfitRaw + unrealisedProfitRaw) /\n            (dayRealisedCost + dayUnrealisedCost)) *\n          100 *\n          (combinedProfitRaw < 0 ? -1 : 1);\n\n    return {\n      ...dayLog,\n      symbols,\n      realisedProfitRaw,\n      realisedProfitPercent,\n      unrealisedProfitRaw,\n      unrealisedProfitPercent,\n      combinedProfitRaw,\n      combinedProfitPercent,\n      realisedCost: dayRealisedCost,\n      unrealisedCost: dayUnrealisedCost,\n      hasHoldings: dayHasHoldings,\n      hasSells: dayHasSells,\n    };\n  });\n}\n\nfunction getDisplayProfit(raw: number, percent: number) {\n  const isProfit = raw >= 0;\n  const displayProfitRaw = `${isProfit ? \"+\" : \"-\"}$${Math.abs(raw).toPrecision(\n    3\n  )}`;\n  const displayProfitPercent = `${isProfit ? \"+\" : \"-\"}${Math.abs(\n    percent\n  ).toPrecision(3)}%`;\n\n  return [displayProfitRaw, displayProfitPercent];\n}\n\nfunction getDisplayProfits(data: {\n  realisedProfitRaw: number;\n  realisedProfitPercent: number;\n  unrealisedProfitRaw: number;\n  unrealisedProfitPercent: number;\n  combinedProfitRaw: number;\n  combinedProfitPercent: number;\n}) {\n  const [realisedRaw, realisedPercent] = getDisplayProfit(\n    data.realisedProfitRaw,\n    data.realisedProfitPercent\n  );\n  const [unrealisedRaw, unrealisedPercent] = getDisplayProfit(\n    data.unrealisedProfitRaw,\n    data.unrealisedProfitPercent\n  );\n  const [combinedRaw, combinedPercent] = getDisplayProfit(\n    data.combinedProfitRaw,\n    data.combinedProfitPercent\n  );\n\n  return {\n    displayRealisedRaw: realisedRaw,\n    displayRealisedPercent: realisedPercent,\n    displayUnrealisedRaw: unrealisedRaw,\n    displayUnrealisedPercent: unrealisedPercent,\n    displayCombinedRaw: combinedRaw,\n    displayCombinedPercent: combinedPercent,\n  };\n}\n\ninterface JournalPageProps {\n  user: User;\n}\nconst JournalPage: React.FC<JournalPageProps> = ({ user }) => {\n  const cachedData = window.localStorage.getItem(\"journalData\");\n  const { loading, setLoading, error, setError } = useAsyncState();\n  const [startLoadTrades, setStartLoadTrades] = useState(false);\n  const [endLoadTrades, setEndLoadTrades] = useState(false);\n  const [startLoadMarketData, setStartLoadMarketData] = useState(false);\n  const [data, setData] = useState<DayLogs>(\n    cachedData ? JSON.parse(cachedData) : []\n  );\n  const [showUnmatchedAlert, setShowUnmatchedAlert] = useState(false);\n  const [unmatchedTransactionCount, setUnmatchedTransactionCount] = useState(0);\n  const holdingSymbols = useMemo(() => {\n    const symbols = data.reduce<{ [symbol: string]: boolean }>(\n      (carry, dayLog) => {\n        if (dayLog) {\n          Object.values(dayLog.symbols).forEach((dayLogSymbol) => {\n            if (dayLogSymbol.holdingUnitCount > 0) {\n              carry[dayLogSymbol.instrument.symbol] = true;\n            }\n          });\n        }\n        return carry;\n      },\n      {}\n    );\n\n    return Object.keys(symbols);\n  }, [data]);\n  const monthLogs = useMemo(() => {\n    const newMonthLogs = data.reduce<MonthLogs>((carry, dayLog) => {\n      if (!dayLog) {\n        return carry;\n      }\n\n      const dayDate = DateTime.fromISO(dayLog.date);\n      const startOfMonth = dayDate.startOf(\"month\");\n      const startOfWeek = dayDate.startOf(\"week\");\n      let monthLog = carry.find((candidate) =>\n        candidate.date.equals(startOfMonth)\n      );\n\n      if (!monthLog) {\n        monthLog = {\n          date: startOfMonth,\n          realisedProfitRaw: 0,\n          realisedProfitPercent: 0,\n          unrealisedProfitRaw: 0,\n          unrealisedProfitPercent: 0,\n          combinedProfitRaw: 0,\n          combinedProfitPercent: 0,\n          realisedCost: 0,\n          unrealisedCost: 0,\n          weekLogs: [],\n          hasHoldings: false,\n          hasSells: false,\n        };\n\n        carry.push(monthLog);\n      }\n\n      let weekLog = monthLog.weekLogs.find((candidate) =>\n        candidate.date.equals(startOfWeek)\n      );\n\n      if (!weekLog) {\n        let weekNumber = 1;\n        let endOfWeek = startOfMonth.endOf(\"week\");\n\n        while (startOfWeek > endOfWeek) {\n          weekNumber++;\n          endOfWeek = endOfWeek.plus({ week: 1 });\n        }\n\n        weekLog = {\n          date: startOfWeek,\n          weekOfMonth: weekNumber,\n          realisedProfitRaw: 0,\n          realisedProfitPercent: 0,\n          unrealisedProfitRaw: 0,\n          unrealisedProfitPercent: 0,\n          combinedProfitRaw: 0,\n          combinedProfitPercent: 0,\n          realisedCost: 0,\n          unrealisedCost: 0,\n          dayLogs: [],\n          hasHoldings: false,\n          hasSells: false,\n        };\n\n        monthLog.weekLogs.push(weekLog);\n      }\n\n      monthLog.hasHoldings = monthLog.hasHoldings || dayLog.hasHoldings;\n      monthLog.hasSells = monthLog.hasSells || dayLog.hasSells;\n      monthLog.realisedCost += dayLog.realisedCost;\n      monthLog.unrealisedCost += dayLog.unrealisedCost;\n      monthLog.realisedProfitRaw += dayLog.realisedProfitRaw;\n      monthLog.unrealisedProfitRaw += dayLog.unrealisedProfitRaw;\n      monthLog.combinedProfitRaw +=\n        dayLog.realisedProfitRaw + dayLog.unrealisedProfitRaw;\n      monthLog.realisedProfitPercent =\n        monthLog.realisedProfitRaw === 0\n          ? 0\n          : (Math.abs(monthLog.realisedProfitRaw) / monthLog.realisedCost) *\n            100 *\n            (monthLog.realisedProfitRaw < 0 ? -1 : 1);\n      monthLog.unrealisedProfitPercent =\n        monthLog.unrealisedProfitRaw === 0\n          ? 0\n          : (Math.abs(monthLog.unrealisedProfitRaw) / monthLog.unrealisedCost) *\n            100 *\n            (monthLog.unrealisedProfitRaw < 0 ? -1 : 1);\n      monthLog.combinedProfitPercent =\n        monthLog.combinedProfitRaw === 0\n          ? 0\n          : (Math.abs(monthLog.combinedProfitRaw) /\n              (monthLog.realisedCost + monthLog.unrealisedCost)) *\n            100 *\n            (monthLog.combinedProfitRaw < 0 ? -1 : 1);\n\n      weekLog.hasHoldings = weekLog.hasHoldings || dayLog.hasHoldings;\n      weekLog.hasSells = weekLog.hasSells || dayLog.hasSells;\n      weekLog.realisedCost += dayLog.realisedCost;\n      weekLog.unrealisedCost += dayLog.unrealisedCost;\n      weekLog.realisedProfitRaw += dayLog.realisedProfitRaw;\n      weekLog.unrealisedProfitRaw += dayLog.unrealisedProfitRaw;\n      weekLog.combinedProfitRaw +=\n        dayLog.realisedProfitRaw + dayLog.unrealisedProfitRaw;\n      weekLog.realisedProfitPercent =\n        weekLog.realisedProfitRaw === 0\n          ? 0\n          : (Math.abs(weekLog.realisedProfitRaw) / weekLog.realisedCost) *\n            100 *\n            (weekLog.realisedProfitRaw < 0 ? -1 : 1);\n      weekLog.unrealisedProfitPercent =\n        weekLog.unrealisedProfitRaw === 0\n          ? 0\n          : (Math.abs(weekLog.unrealisedProfitRaw) / weekLog.unrealisedCost) *\n            100 *\n            (weekLog.unrealisedProfitRaw < 0 ? -1 : 1);\n      weekLog.combinedProfitPercent =\n        weekLog.combinedProfitRaw === 0\n          ? 0\n          : (Math.abs(weekLog.combinedProfitRaw) /\n              (weekLog.realisedCost + weekLog.unrealisedCost)) *\n            100 *\n            (weekLog.combinedProfitRaw < 0 ? -1 : 1);\n\n      weekLog.dayLogs.push(dayLog);\n\n      return carry;\n    }, []);\n\n    newMonthLogs.forEach((monthLog) => {\n      monthLog.weekLogs.forEach((weekLog) => {\n        weekLog.dayLogs.reverse();\n      });\n\n      monthLog.weekLogs.reverse();\n    });\n    newMonthLogs.reverse();\n\n    return newMonthLogs;\n  }, [data]);\n  const summary = useMemo(() => {\n    let startingBalance = 0;\n\n    const [realisedBalance, unrealisedBalance] = data.reduce<[number, number]>(\n      (carry, dayLog) => {\n        if (dayLog) {\n          if (!startingBalance) {\n            startingBalance = dayLog.startingAccountBalance;\n            carry[0] = startingBalance;\n            carry[1] = startingBalance;\n          }\n\n          carry[0] += dayLog.realisedProfitRaw;\n          carry[1] += dayLog.combinedProfitRaw;\n        }\n        return carry;\n      },\n      [0, 0]\n    );\n\n    const realisedProfitRaw = realisedBalance - startingBalance;\n    const realisedProfitPercent =\n      realisedProfitRaw === 0\n        ? 0\n        : (Math.abs(realisedProfitRaw) / startingBalance) *\n          100 *\n          (realisedProfitRaw >= 0 ? 1 : -1);\n    const isRealisedProfit = realisedProfitRaw >= 0;\n    const unrealisedProfitRaw = unrealisedBalance - startingBalance;\n    const unrealisedProfitPercent =\n      unrealisedProfitRaw === 0\n        ? 0\n        : (Math.abs(unrealisedProfitRaw) / startingBalance) *\n          100 *\n          (unrealisedProfitRaw >= 0 ? 1 : -1);\n    const isUnrealisedProfit = unrealisedProfitRaw >= 0;\n\n    const [\n      displayRealisedProfitRaw,\n      displayRealisedProfitPercent,\n    ] = getDisplayProfit(realisedProfitRaw, realisedProfitPercent);\n    const [\n      displayUnrealisedProfitRaw,\n      displayUnrealisedProfitPercent,\n    ] = getDisplayProfit(unrealisedProfitRaw, unrealisedProfitPercent);\n\n    return {\n      startingBalance: `$${startingBalance}`,\n      isRealisedProfit,\n      realisedBalance: `$${realisedBalance.toFixed(2)}`,\n      realisedProfitRaw: displayRealisedProfitRaw,\n      realisedProfitPercent: displayRealisedProfitPercent,\n      isUnrealisedProfit,\n      unrealisedBalance: `$${unrealisedBalance.toFixed(2)}`,\n      unrealisedProfitRaw: displayUnrealisedProfitRaw,\n      unrealisedProfitPercent: displayUnrealisedProfitPercent,\n    };\n  }, [data]);\n\n  useEffect(() => {\n    const startFetchingTrades = async () => {\n      const startOfYear = DateTime.local().startOf(\"year\");\n      const lastFetchDate = window.localStorage.getItem(\"journalLastFetchDate\");\n      const fetchFrom = lastFetchDate\n        ? DateTime.fromISO(lastFetchDate)\n        : startOfYear;\n      const fetchTo = DateTime.local();\n      const limit = 100;\n      let offset = 0;\n      let fetching = true;\n      let newData = data.slice();\n      let unmatchedTransactions: Transaction[] = [];\n      let buyTransactions: Transaction[] = [];\n      let sellTransactions: Transaction[] = [];\n      setLoading(true);\n\n      try {\n        do {\n          const transactions = await loadTrades(\n            user,\n            fetchFrom,\n            fetchTo,\n            limit,\n            offset,\n            true\n          );\n          offset += limit;\n\n          buyTransactions = buyTransactions.concat(\n            transactions.filter(\n              (transaction) => transaction.finTranTypeID === \"SPUR\"\n            )\n          );\n          sellTransactions = sellTransactions.concat(\n            transactions.filter(\n              (transaction) => transaction.finTranTypeID === \"SSAL\"\n            )\n          );\n\n          if (transactions.length < limit) {\n            fetching = false;\n          }\n        } while (fetching);\n      } catch (e) {\n        setError({\n          title: \"Fetching trades failed\",\n          message: e.message,\n        });\n      }\n\n      buyTransactions.sort(sortTransactionsAsc);\n      sellTransactions.sort(sortTransactionsAsc);\n\n      newData = fillDataArrayWithBuys(startOfYear, newData, buyTransactions);\n      [newData, unmatchedTransactions] = fillDataArrayWithSells(\n        newData,\n        sellTransactions\n      );\n\n      newData = calculateProfits(newData, {});\n\n      window.localStorage.setItem(\"journalData\", JSON.stringify(newData));\n      window.localStorage.setItem(\"journalLastFetchDate\", fetchTo.toISO());\n\n      setData(newData);\n      setUnmatchedTransactionCount(unmatchedTransactions.length);\n      setShowUnmatchedAlert(unmatchedTransactions.length > 0);\n      setLoading(false);\n      setEndLoadTrades(true);\n    };\n\n    if (!startLoadTrades) {\n      setStartLoadTrades(true);\n      startFetchingTrades();\n    }\n  }, [startLoadTrades, data, setLoading, user, setError]);\n\n  useEffect(() => {\n    const fetchMarketData = async () => {\n      setLoading(true);\n\n      try {\n        const marketDataList = await loadMarketData(user, holdingSymbols);\n        const symbolPrices = marketDataList.reduce<{\n          [symbol: string]: number;\n        }>((carry, marketData) => {\n          carry[marketData.symbol] = marketData.lastTrade;\n          return carry;\n        }, {});\n\n        setData(calculateProfits(data, symbolPrices));\n      } catch (e) {\n        setError({\n          title: \"Fetching market data failed\",\n          message: e.message,\n        });\n      }\n\n      setLoading(false);\n    };\n\n    if (endLoadTrades && !startLoadMarketData && holdingSymbols.length) {\n      setStartLoadMarketData(true);\n      fetchMarketData();\n    }\n  }, [\n    data,\n    holdingSymbols,\n    endLoadTrades,\n    startLoadMarketData,\n    setError,\n    setLoading,\n    user,\n  ]);\n\n  return (\n    <div className=\"w-full\">\n      <header className=\"px-4 py-2 w-full flex items-center\">\n        <H2>{`${user.firstName}'s trade journal`}</H2>\n        {loading && <LoaderIcon className=\"ml-2\" />}\n        <InternalLink className=\"ml-auto\" to=\"/logout\">\n          Log out\n        </InternalLink>\n      </header>\n      <main className=\"mt-8 p-4 flex flex-col items-center\">\n        <div style={{ width: 400 }}>{error()}</div>\n        {showUnmatchedAlert && (\n          <div style={{ width: 400 }}>\n            <ErrorAlert\n              message={`Found ${unmatchedTransactionCount} unmatched sell transactions`}\n              dismissable={true}\n              onDismiss={() => setShowUnmatchedAlert(false)}\n            />\n          </div>\n        )}\n        <div style={{ width: TABLE_WIDTH }}>\n          <div>\n            <H2>Account summary</H2>\n            <div className=\"mt-2 px-2 py-5 border border-gray-100 shadow rounded-lg flex justify-between\">\n              <div\n                className=\"flex-shrink-0 text-center\"\n                style={{ width: SUMMARY_CELL_WIDTH }}\n              >\n                <div className=\"text-gray-300\">Starting balance</div>\n                <div className=\"my-3\">{summary.startingBalance}</div>\n              </div>\n              <div\n                className=\"flex-shrink-0 text-center\"\n                style={{ width: SUMMARY_CELL_WIDTH }}\n              >\n                <div className=\"text-gray-300\">Realised balance</div>\n                <div\n                  className={`my-3 ${\n                    summary.isRealisedProfit ? \"text-green-500\" : \"text-red-500\"\n                  }`}\n                >\n                  {summary.realisedBalance}\n                </div>\n              </div>\n              <div\n                className=\"flex-shrink-0 text-center\"\n                style={{ width: SUMMARY_CELL_WIDTH }}\n              >\n                <div className=\"text-gray-300\">Realised ($)</div>\n                <div\n                  className={`my-3 ${\n                    summary.isRealisedProfit ? \"text-green-500\" : \"text-red-500\"\n                  }`}\n                >\n                  {summary.realisedProfitRaw}\n                </div>\n              </div>\n              <div\n                className=\"flex-shrink-0 text-center\"\n                style={{ width: SUMMARY_CELL_WIDTH }}\n              >\n                <div className=\"text-gray-300\">Realised (%)</div>\n                <div\n                  className={`my-3 ${\n                    summary.isRealisedProfit ? \"text-green-500\" : \"text-red-500\"\n                  }`}\n                >\n                  {summary.realisedProfitPercent}\n                </div>\n              </div>\n              <div\n                className=\"flex-shrink-0 text-center\"\n                style={{ width: SUMMARY_CELL_WIDTH }}\n              >\n                <div className=\"text-gray-300\">Unrealised balance</div>\n                <div\n                  className={`my-3 ${\n                    summary.isUnrealisedProfit\n                      ? \"text-green-500\"\n                      : \"text-red-500\"\n                  }`}\n                >\n                  {summary.unrealisedBalance}\n                </div>\n              </div>\n              <div\n                className=\"flex-shrink-0 text-center\"\n                style={{ width: SUMMARY_CELL_WIDTH }}\n              >\n                <div className=\"text-gray-300\">Unrealised ($)</div>\n                <div\n                  className={`my-3 ${\n                    summary.isUnrealisedProfit\n                      ? \"text-green-500\"\n                      : \"text-red-500\"\n                  }`}\n                >\n                  {summary.unrealisedProfitRaw}\n                </div>\n              </div>\n              <div\n                className=\"flex-shrink-0 text-center\"\n                style={{ width: SUMMARY_CELL_WIDTH }}\n              >\n                <div className=\"text-gray-300\">Unrealised (%)</div>\n                <div\n                  className={`my-3 ${\n                    summary.isUnrealisedProfit\n                      ? \"text-green-500\"\n                      : \"text-red-500\"\n                  }`}\n                >\n                  {summary.unrealisedProfitPercent}\n                </div>\n              </div>\n            </div>\n          </div>\n          {monthLogs.map((monthLog) => {\n            const {\n              displayRealisedRaw,\n              displayRealisedPercent,\n              displayUnrealisedRaw,\n              displayUnrealisedPercent,\n              displayCombinedRaw,\n              displayCombinedPercent,\n            } = getDisplayProfits(monthLog);\n\n            return (\n              <div className=\"mt-8\" key={monthLog.date.toISO()}>\n                <div className=\"flex items-center\">\n                  <H2>{monthLog.date.toFormat(\"MMMM yyyy\")}</H2>\n\n                  <span\n                    className={`ml-auto flex-shrink-0 text-2xl text-center ${\n                      monthLog.realisedProfitRaw >= 0\n                        ? \"text-green-500\"\n                        : \"text-red-500\"\n                    }`}\n                    style={{ width: CELL_WIDTH }}\n                  >\n                    {monthLog.hasSells ? displayRealisedRaw : \"\"}\n                  </span>\n                  <span\n                    className={`flex-shrink-0 text-2xl text-center ${\n                      monthLog.realisedProfitRaw >= 0\n                        ? \"text-green-500\"\n                        : \"text-red-500\"\n                    }`}\n                    style={{ width: CELL_WIDTH }}\n                  >\n                    {monthLog.hasSells ? displayRealisedPercent : \"\"}\n                  </span>\n                  <span\n                    className={`flex-shrink-0 text-2xl text-center ${\n                      monthLog.unrealisedProfitRaw >= 0\n                        ? \"text-green-500\"\n                        : \"text-red-500\"\n                    }`}\n                    style={{ width: CELL_WIDTH }}\n                  >\n                    {monthLog.hasHoldings ? displayUnrealisedRaw : \"\"}\n                  </span>\n                  <span\n                    className={`flex-shrink-0 text-2xl text-center ${\n                      monthLog.unrealisedProfitRaw >= 0\n                        ? \"text-green-500\"\n                        : \"text-red-500\"\n                    }`}\n                    style={{ width: CELL_WIDTH }}\n                  >\n                    {monthLog.hasHoldings ? displayUnrealisedPercent : \"\"}\n                  </span>\n                  <span\n                    className={`flex-shrink-0 text-2xl text-center ${\n                      monthLog.combinedProfitRaw >= 0\n                        ? \"text-green-500\"\n                        : \"text-red-500\"\n                    }`}\n                    style={{ width: CELL_WIDTH }}\n                  >\n                    {displayCombinedRaw}\n                  </span>\n                  <span\n                    className={`flex-shrink-0 text-2xl text-center ${\n                      monthLog.combinedProfitRaw >= 0\n                        ? \"text-green-500\"\n                        : \"text-red-500\"\n                    }`}\n                    style={{ width: CELL_WIDTH }}\n                  >\n                    {displayCombinedPercent}\n                  </span>\n                </div>\n                {monthLog.weekLogs.map((weekLog, weekIndex) => {\n                  const {\n                    displayRealisedRaw,\n                    displayRealisedPercent,\n                    displayUnrealisedRaw,\n                    displayUnrealisedPercent,\n                    displayCombinedRaw,\n                    displayCombinedPercent,\n                  } = getDisplayProfits(weekLog);\n\n                  return (\n                    <div\n                      key={weekLog.date.toISO()}\n                      className={`${weekIndex === 0 ? \"mt-4\" : \"mt-16\"}`}\n                    >\n                      <div className=\"flex items-center\">\n                        <H3>{`Week ${weekLog.weekOfMonth}`}</H3>\n                        <span\n                          className={`ml-auto flex-shrink-0 text-xl text-center ${\n                            weekLog.realisedProfitRaw >= 0\n                              ? \"text-green-500\"\n                              : \"text-red-500\"\n                          }`}\n                          style={{ width: CELL_WIDTH }}\n                        >\n                          {weekLog.hasSells ? displayRealisedRaw : \"\"}\n                        </span>\n                        <span\n                          className={`flex-shrink-0 text-xl text-center ${\n                            weekLog.realisedProfitRaw >= 0\n                              ? \"text-green-500\"\n                              : \"text-red-500\"\n                          }`}\n                          style={{ width: CELL_WIDTH }}\n                        >\n                          {weekLog.hasSells ? displayRealisedPercent : \"\"}\n                        </span>\n                        <span\n                          className={`flex-shrink-0 text-xl text-center ${\n                            weekLog.unrealisedProfitRaw >= 0\n                              ? \"text-green-500\"\n                              : \"text-red-500\"\n                          }`}\n                          style={{ width: CELL_WIDTH }}\n                        >\n                          {weekLog.hasHoldings ? displayUnrealisedRaw : \"\"}\n                        </span>\n                        <span\n                          className={`flex-shrink-0 text-xl text-center ${\n                            weekLog.unrealisedProfitRaw >= 0\n                              ? \"text-green-500\"\n                              : \"text-red-500\"\n                          }`}\n                          style={{ width: CELL_WIDTH }}\n                        >\n                          {weekLog.hasHoldings ? displayUnrealisedPercent : \"\"}\n                        </span>\n                        <span\n                          className={`flex-shrink-0 text-xl text-center ${\n                            weekLog.combinedProfitRaw >= 0\n                              ? \"text-green-500\"\n                              : \"text-red-500\"\n                          }`}\n                          style={{ width: CELL_WIDTH }}\n                        >\n                          {displayCombinedRaw}\n                        </span>\n                        <span\n                          className={`flex-shrink-0 text-xl text-center ${\n                            weekLog.combinedProfitRaw >= 0\n                              ? \"text-green-500\"\n                              : \"text-red-500\"\n                          }`}\n                          style={{ width: CELL_WIDTH }}\n                        >\n                          {displayCombinedPercent}\n                        </span>\n                      </div>\n                      {weekLog.dayLogs.map((dayLog) => {\n                        if (!dayLog) {\n                          return null;\n                        }\n\n                        const dayDate = DateTime.fromISO(dayLog.date);\n                        const {\n                          displayRealisedRaw,\n                          displayRealisedPercent,\n                          displayUnrealisedRaw,\n                          displayUnrealisedPercent,\n                          displayCombinedRaw,\n                          displayCombinedPercent,\n                        } = getDisplayProfits(dayLog);\n                        const symbolEntries = Object.values(dayLog.symbols);\n                        symbolEntries.sort(sortLogEntries);\n\n                        return (\n                          <div\n                            key={dayLog.date}\n                            className=\"mt-4 p-2 border border-gray-100 shadow rounded-lg\"\n                          >\n                            <div className=\"flex items-center\">\n                              <H4>{dayDate.toFormat(\"EEEE\")}</H4>\n                              <span className=\"ml-auto text-gray-300\">\n                                {dayDate.toFormat(\"dd/MM\")}\n                              </span>\n                            </div>\n                            <div className=\"my-3 flex items-center\">\n                              <div\n                                className=\"flex-shrink-0 text-center text-gray-300\"\n                                style={{ width: CELL_WIDTH }}\n                              >\n                                Code\n                              </div>\n                              <div\n                                className=\"flex-shrink-0 text-center text-gray-300\"\n                                style={{ width: CELL_WIDTH }}\n                              >\n                                Buy\n                              </div>\n                              <div\n                                className=\"flex-shrink-0 text-center text-gray-300\"\n                                style={{ width: CELL_WIDTH }}\n                              >\n                                Sell\n                              </div>\n                              <div\n                                className=\"flex-shrink-0 text-center text-gray-300\"\n                                style={{ width: CELL_WIDTH }}\n                              >\n                                Hold\n                              </div>\n                              <div\n                                className=\"ml-auto flex-shrink-0 text-center text-gray-300\"\n                                style={{ width: CELL_WIDTH }}\n                              >\n                                Realised ($)\n                              </div>\n                              <div\n                                className=\"flex-shrink-0 text-center text-gray-300\"\n                                style={{ width: CELL_WIDTH }}\n                              >\n                                Realised (%)\n                              </div>\n                              <div\n                                className=\"flex-shrink-0 text-center text-gray-300\"\n                                style={{ width: CELL_WIDTH }}\n                              >\n                                Unrealised ($)\n                              </div>\n                              <div\n                                className=\"flex-shrink-0 text-center text-gray-300\"\n                                style={{ width: CELL_WIDTH }}\n                              >\n                                Unrealised (%)\n                              </div>\n                              <div\n                                className=\"flex-shrink-0 text-center text-gray-300\"\n                                style={{ width: CELL_WIDTH }}\n                              >\n                                Combined ($)\n                              </div>\n                              <div\n                                className=\"flex-shrink-0 text-center text-gray-300\"\n                                style={{ width: CELL_WIDTH }}\n                              >\n                                Combined (%)\n                              </div>\n                            </div>\n                            {symbolEntries.map((logEntry) => {\n                              const hasHoldings = logEntry.holdingUnitCount > 0;\n                              const hasSold = logEntry.sells.length > 0;\n                              const {\n                                displayRealisedRaw,\n                                displayRealisedPercent,\n                                displayUnrealisedRaw,\n                                displayUnrealisedPercent,\n                                displayCombinedRaw,\n                                displayCombinedPercent,\n                              } = getDisplayProfits(logEntry);\n\n                              return (\n                                <div\n                                  key={logEntry.instrument.symbol}\n                                  className=\"my-3 flex items-center\"\n                                >\n                                  <div\n                                    className=\"text-center\"\n                                    style={{ width: CELL_WIDTH }}\n                                  >\n                                    {logEntry.instrument.symbol}\n                                  </div>\n                                  <div\n                                    className=\"flex flex-col\"\n                                    style={{ width: CELL_WIDTH }}\n                                  >\n                                    {logEntry.buys.map((buy, index) => {\n                                      return (\n                                        <div\n                                          key={index}\n                                          className=\"text-center\"\n                                        >\n                                          {`${\n                                            buy.unitQuantity\n                                          } @ $${buy.unitPrice.toPrecision(4)}`}\n                                        </div>\n                                      );\n                                    })}\n                                  </div>\n                                  <div\n                                    className=\"flex flex-col\"\n                                    style={{ width: CELL_WIDTH }}\n                                  >\n                                    {logEntry.sells.map((sell, index) => {\n                                      return (\n                                        <div\n                                          key={index}\n                                          className=\"text-center\"\n                                        >\n                                          {`${\n                                            sell.unitQuantity\n                                          } @ $${sell.unitPrice.toPrecision(\n                                            4\n                                          )}`}\n                                        </div>\n                                      );\n                                    })}\n                                  </div>\n                                  <div\n                                    className=\"text-center text-yellow-500\"\n                                    style={{ width: CELL_WIDTH }}\n                                  >\n                                    {hasHoldings\n                                      ? `${logEntry.holdingUnitCount}`\n                                      : \"\"}\n                                  </div>\n                                  <div\n                                    className={`ml-auto text-center ${\n                                      logEntry.realisedProfitRaw >= 0\n                                        ? \"text-green-500\"\n                                        : \"text-red-500\"\n                                    }`}\n                                    style={{ width: CELL_WIDTH }}\n                                  >\n                                    {hasSold ? displayRealisedRaw : \"\"}\n                                  </div>\n                                  <div\n                                    className={`text-center ${\n                                      logEntry.realisedProfitRaw >= 0\n                                        ? \"text-green-500\"\n                                        : \"text-red-500\"\n                                    }`}\n                                    style={{ width: CELL_WIDTH }}\n                                  >\n                                    {hasSold ? displayRealisedPercent : \"\"}\n                                  </div>\n                                  <div\n                                    className={`text-center ${\n                                      logEntry.unrealisedProfitRaw >= 0\n                                        ? \"text-green-500\"\n                                        : \"text-red-500\"\n                                    }`}\n                                    style={{ width: CELL_WIDTH }}\n                                  >\n                                    {hasHoldings ? displayUnrealisedRaw : \"\"}\n                                  </div>\n                                  <div\n                                    className={`text-center ${\n                                      logEntry.unrealisedProfitRaw >= 0\n                                        ? \"text-green-500\"\n                                        : \"text-red-500\"\n                                    }`}\n                                    style={{ width: CELL_WIDTH }}\n                                  >\n                                    {hasHoldings\n                                      ? displayUnrealisedPercent\n                                      : \"\"}\n                                  </div>\n                                  <div\n                                    className={`text-center ${\n                                      logEntry.combinedProfitRaw >= 0\n                                        ? \"text-green-500\"\n                                        : \"text-red-500\"\n                                    }`}\n                                    style={{ width: CELL_WIDTH }}\n                                  >\n                                    {displayCombinedRaw}\n                                  </div>\n                                  <div\n                                    className={`text-center ${\n                                      logEntry.combinedProfitRaw >= 0\n                                        ? \"text-green-500\"\n                                        : \"text-red-500\"\n                                    }`}\n                                    style={{ width: CELL_WIDTH }}\n                                  >\n                                    {displayCombinedPercent}\n                                  </div>\n                                </div>\n                              );\n                            })}\n\n                            <div className=\"py-3 flex items-center border-t border-gray-200\">\n                              <span\n                                className={`ml-auto flex-shrink-0 text-lg text-center ${\n                                  dayLog.realisedProfitRaw >= 0\n                                    ? \"text-green-500\"\n                                    : \"text-red-500\"\n                                }`}\n                                style={{ width: CELL_WIDTH }}\n                              >\n                                {dayLog.hasSells ? displayRealisedRaw : \"\"}\n                              </span>\n                              <span\n                                className={`flex-shrink-0 text-lg text-center ${\n                                  dayLog.realisedProfitRaw >= 0\n                                    ? \"text-green-500\"\n                                    : \"text-red-500\"\n                                }`}\n                                style={{ width: CELL_WIDTH }}\n                              >\n                                {dayLog.hasSells ? displayRealisedPercent : \"\"}\n                              </span>\n                              <span\n                                className={`flex-shrink-0 text-lg text-center ${\n                                  dayLog.unrealisedProfitRaw >= 0\n                                    ? \"text-green-500\"\n                                    : \"text-red-500\"\n                                }`}\n                                style={{ width: CELL_WIDTH }}\n                              >\n                                {dayLog.hasHoldings ? displayUnrealisedRaw : \"\"}\n                              </span>\n                              <span\n                                className={`flex-shrink-0 text-lg text-center ${\n                                  dayLog.unrealisedProfitRaw >= 0\n                                    ? \"text-green-500\"\n                                    : \"text-red-500\"\n                                }`}\n                                style={{ width: CELL_WIDTH }}\n                              >\n                                {dayLog.hasHoldings\n                                  ? displayUnrealisedPercent\n                                  : \"\"}\n                              </span>\n                              <span\n                                className={`flex-shrink-0 text-lg text-center ${\n                                  dayLog.combinedProfitRaw >= 0\n                                    ? \"text-green-500\"\n                                    : \"text-red-500\"\n                                }`}\n                                style={{ width: CELL_WIDTH }}\n                              >\n                                {displayCombinedRaw}\n                              </span>\n                              <span\n                                className={`flex-shrink-0 text-lg text-center ${\n                                  dayLog.combinedProfitRaw >= 0\n                                    ? \"text-green-500\"\n                                    : \"text-red-500\"\n                                }`}\n                                style={{ width: CELL_WIDTH }}\n                              >\n                                {displayCombinedPercent}\n                              </span>\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default JournalPage;\n","import React from \"react\";\nimport {\n  withRouter,\n  Route,\n  Switch,\n  useLocation,\n  Redirect,\n} from \"react-router-dom\";\nimport { useCurrentUser } from \"../libs/hooks/user\";\n\nimport LoginPage from \"../pages/Login\";\nimport LogoutPage from \"../pages/Logout\";\nimport JournalPage from \"../pages/Journal\";\n\nconst App: React.FC = () => {\n  const location = useLocation();\n  const user = useCurrentUser();\n  const unauthenticatedRoutes = [\n    <Route key={\"/login\"} path=\"/login\" exact component={LoginPage} />,\n    <Redirect key={\"redirect/login\"} to=\"/login\" />,\n  ];\n  const authenticatedRoutes = [\n    <Route key={\"/journal\"} path=\"/journal\" exact>\n      <JournalPage user={user!} />\n    </Route>,\n    <Route key={\"/logout\"} path=\"/logout\" exact>\n      <LogoutPage user={user!} />\n    </Route>,\n    <Redirect key={\"redirect/journal\"} to=\"/journal\" />,\n  ];\n\n  return (\n    <Switch location={location}>\n      {user ? authenticatedRoutes : unauthenticatedRoutes}\n    </Switch>\n  );\n};\n\nexport default withRouter(App);\n","import { User } from \"../../types\";\n\nexport const useCurrentUser = () => {\n  const userJson = window.localStorage.getItem(\"user\");\n\n  if (userJson) {\n    return JSON.parse(userJson) as User;\n  } else {\n    return null;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\n\nReactDOM.render(\n  <HashRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}